<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="en">
	<title>!important</title>
	<subtitle>Writing about my not-important experiences.</subtitle>
	<link href="https://david-way.github.io/feed/feed.xml" rel="self"/>
	<link href="https://david-way.github.io/"/>
	<updated>2025-07-09T00:00:00Z</updated>
	<id>https://david-way.github.io/</id>
	<author>
		<name>David Way</name>
		<email>david_way@live.ie</email>
	</author>
	
	<entry>
		<title>CSS strategy; The Whys and Whens</title>
		<link href="https://david-way.github.io/blog/css-strategy/"/>
		<updated>2025-07-09T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/css-strategy/</id>
		<content type="html">&lt;p&gt;Powerful modern CSS tooling and features have made achieving desired effects easier and more robust than ever.&lt;/p&gt;
&lt;p&gt;When the &amp;quot;how&amp;quot; is so trivial you barely have to think about it you can lose some of the time and as a result the deeper understanding of the Why&#39;s and Whens that comes as a side effect of trial and error.&lt;/p&gt;
&lt;p&gt;I&#39;ll take this opportunity to share a few more nuanced points of view I&#39;ve pondered up in my years of pushing (and failing to push) pixels that I feel I might have missed if things were always as easy as they are today.&lt;/p&gt;
&lt;h2 id=&quot;mobile-first&quot; tabindex=&quot;-1&quot;&gt;Mobile first? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &amp;quot;direction&amp;quot; you write your CSS in should, for simplicity&#39;s sake, likely follow whatever convention your team has established already. Ideally, you should implement both options,on a case-by-case basis, and use the direction that results in the least amount of or most elegant code. Ultimately the key value here is to be thinking and designing in a mobile first mindset. &amp;quot;Space is not a given, space is a progressive enhancement, the pattern I choose will work first in the restrictions of a small screen and adapt to take advantage of any additional space where available&amp;quot;.&lt;/p&gt;
&lt;h2 id=&quot;using-rems-means-my-fonts-are-responsive&quot; tabindex=&quot;-1&quot;&gt;Using rems means my fonts are responsive? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Responsive fonts &lt;em&gt;and type settings&lt;/em&gt; must adjust to screen size, but also to the user&#39;s configuration. Remember that browser settings and browser plugins exist to allow users to override the base font size and the zoom level of any site. Your text should respond relatively to maintain hierarchy. Rems is how you achieve this. But don&#39;t forget the line lengths, language type direction and your typesetting space also needs to be proportional to maintain the responsive readability of the text.&lt;/p&gt;
&lt;h2 id=&quot;when-is-the-concept-of-aspect-ratio-applicable-in-web-design&quot; tabindex=&quot;-1&quot;&gt;When is the concept of aspect ratio applicable in web design? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Enforcing an aspect ratio, via the padding bottom trick or the modern aspect-ratio property, should be reserved exclusively for graphics content (images, diagrams, video, maps, and some data tables). Responsive design is fundamentally about making the most of available space and avoiding overflow and multidirectional scrolling. The concept of enforcing an aspect ratio goes against this by preventing reflow or fluid resizing (wrapping text will increase in height as it is reduced in width) and risking overflow or two-dimensional scrolling. However, WCAG Success Criterion 1.4.10 for reflow has specific exceptions for some graphic content, listed above, as there is position and relational information encoded within these elements that cannot easily be adjusted to all screen contexts, and squished images are visually unappealing. Therefore, aspect ratios and the two-dimensional scrolling they risk are permitted and may be recommended.&lt;/p&gt;
&lt;h2 id=&quot;is-performance-in-css-important-what-s-worth-focusing-on&quot; tabindex=&quot;-1&quot;&gt;Is performance in CSS important? What&#39;s worth focusing on? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finely tuned code splitting, lazy loading/preloading assets, auditing and automating unused styles culling, file  minification, inlining critical above the fold render path styles, optimising animations to use hardware acceleration and avoid triggering repaints. These have the largest effect on the metrics we care the most about, reducing bundle size, minimizing FLOUT and other layout jank, preventing render thread blocking and minimizing time to first paint. These are all worth investing some level of effort into, however...&lt;/p&gt;
&lt;p&gt;Low selector specificity will barely nudge the needle on any of these metrics but I single it out for specific &amp;quot;performance&amp;quot; focus for it&#39;s outsized effect on the style architecture, agility, scalability and maintainability of a project. Also, developer sanity.&lt;/p&gt;
&lt;h2 id=&quot;more-to-come&quot; tabindex=&quot;-1&quot;&gt;More to come... &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;it-s-2025-should-i-still-consider-a-pre-proccessor&quot; tabindex=&quot;-1&quot;&gt;It&#39;s 2025, should I still consider a pre-proccessor? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&quot;css-in-js-for-or-against&quot; tabindex=&quot;-1&quot;&gt;CSS in JS, for or against? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/css-strategy/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
</content>
	</entry>
	
	<entry>
		<title>A11y toolkit</title>
		<link href="https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/"/>
		<updated>2024-11-22T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/</id>
		<content type="html">&lt;p&gt;Humans are the only species for whom tool use is a defining and universal characteristic.&lt;/p&gt;
&lt;p&gt;What I value most in good tools is how they embody the toolmakers knowledge and the expertise related to the tasks and needs they were designed to address. They crystallize, refine, and facilitate the sharing of this knowledge and expertise. Good tools can provide solutions while teaching you more about the underlying problems.&lt;/p&gt;
&lt;p&gt;It&#39;s easy to over rely and over-focus on tooling (at the expense of studying theory and gaining practical experience) but when approaching a new domain, deeply learning about available tools can be a great introduction to learning about the domain.&lt;/p&gt;
&lt;p&gt;In the last year I&#39;ve been learning deeply and applying the concepts and principles of accessible digital product design. Here is a list of tools and resources I&#39;ve found particularly useful.&lt;/p&gt;
&lt;h2 id=&quot;web-design-tools&quot; tabindex=&quot;-1&quot;&gt;Web Design Tools &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8thjvouj90pbk&quot; href=&quot;https://webaim.org/resources/contrastchecker/&quot; class=&quot;c-described-link__label&quot;&gt;WebAim Color contrast checker&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8thjvouj90pbk&quot; class=&quot;c-described-link__description&quot;&gt;Contrast is a measure of the difference in perceived &#39;luminance&#39; or brightness between two colors. Having enough contrast is vital to ensure users with visual disabilities, must be able to perceive content on the page.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tama7md61mp&quot; href=&quot;https://dequeuniversity.com/color-contrast&quot; class=&quot;c-described-link__label&quot;&gt;Deque color contrast checker&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tama7md61mp&quot; class=&quot;c-described-link__description&quot;&gt;Much like the WebAim contrast checker but it uses a different algorithm and can give slightly different results. It&#39;s worth testing with both tools if your values are just barely meeting minimum contrast requirements.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8t4zbij6eno39&quot; href=&quot;https://dequeuniversity.com/library/&quot; class=&quot;c-described-link__label&quot;&gt;Deque aria usage patterns&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8t4zbij6eno39&quot; class=&quot;c-described-link__description&quot;&gt;A code library of accessibility focused work in progress examples.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tgs7ltfj9509&quot; href=&quot;https://www.deque.com/axe/browser-extensions/&quot; class=&quot;c-described-link__label&quot;&gt;Axe browser extension&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tgs7ltfj9509&quot; class=&quot;c-described-link__description&quot;&gt;A free accessibility browser extension.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tyac901t8sip&quot; href=&quot;https://pagespeed.web.dev/&quot; class=&quot;c-described-link__label&quot;&gt;pagespeed.web.dev&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tyac901t8sip&quot; class=&quot;c-described-link__description&quot;&gt;Analyze your implementation with PageSpeed Insights. Get your PageSpeed score and use PageSpeed suggestions to make your web site faster and more accessible.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8t9ndwxnipur&quot; href=&quot;https://charactercalculator.com/flesch-reading-ease/&quot; class=&quot;c-described-link__label&quot;&gt;Flesch Kincaid Calculator&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8t9ndwxnipur&quot; class=&quot;c-described-link__description&quot;&gt;Gauge the accessibility of your written content. An online tool that evaluates the readability of a piece of text. The tool gives both ease of reading score and calculates the reading grade level which equates the texts complexity to an American school grade level.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tg8qtox8v6ko&quot; href=&quot;https://www.webfx.com/tools/read-able/&quot; class=&quot;c-described-link__label&quot;&gt;WebFX&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tg8qtox8v6ko&quot; class=&quot;c-described-link__description&quot;&gt;An objective reading grade level assessment tool. Ensure your language is clear and understandable to your target audience.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tse9fva4ofb&quot; href=&quot;https://www.figma.com/community/file/1118184491812988116/ibm-accessibility-design-kit&quot; class=&quot;c-described-link__label&quot;&gt;IBM a11y Figma annotations and guidance kit&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tse9fva4ofb&quot; class=&quot;c-described-link__description&quot;&gt;This Figma library contains bite-sized guidance and handoff assets for accessibility.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8t8jsbellrjs9&quot; href=&quot;https://wave.webaim.org/&quot; class=&quot;c-described-link__label&quot;&gt;WAVE Web Accessibility Evaluation Tools&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8t8jsbellrjs9&quot; class=&quot;c-described-link__description&quot;&gt;WAVE® is a suite of evaluation tools that helps authors make their web content more accessible to individuals with disabilities.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;bookmarklets&quot; tabindex=&quot;-1&quot;&gt;Bookmarklets &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;details&gt;
  &lt;summary&gt;What is a bookmarklet?&lt;/summary&gt;
&lt;p&gt;A browser bookmarklet is a small piece of JavaScript code saved as a bookmark in a web browser.&lt;/p&gt;
&lt;p&gt;Bookmarklets can perform a specific action when clicked and be used to manipulate , interact with the current webpage and its content.&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tth6fzfhqobe&quot; href=&quot;https://www.ssa.gov/accessibility/andi/help/install.html/&quot; class=&quot;c-described-link__label&quot;&gt;ANDI&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tth6fzfhqobe&quot; class=&quot;c-described-link__description&quot;&gt;Accessible Name &amp;amp; Description Inspector (ANDI) is a free accessibility testing tool.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bj8tqjxtzkhtmz&quot; href=&quot;https://dequeuniversity.com/validator&quot; class=&quot;c-described-link__label&quot;&gt;Full Current Page DOM HTML Validator&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bj8tqjxtzkhtmz&quot; class=&quot;c-described-link__description&quot;&gt;This bookmarklet is the most convenient way of using the W3C HTML Validator service.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;A long list of very specific bookmarklets can be found on &lt;a href=&quot;https://pauljadam.com/bookmarklets.html&quot;&gt;Paul J. Adam&lt;/a&gt;&#39;s consultancy site.&lt;/p&gt;
&lt;h2 id=&quot;references&quot; tabindex=&quot;-1&quot;&gt;References &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/cYzCZXmHRu-1258.avif 1258w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/cYzCZXmHRu-1258.webp 1258w&quot;&gt;&lt;img alt=&quot;collection of do&#39;s and don&#39;ts UK Gov a11y posters&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/cYzCZXmHRu-1258.png&quot; width=&quot;1258&quot; height=&quot;1134&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;
The &lt;cite&gt;&lt;a href=&quot;https://accessibility.blog.gov.uk/2016/09/02/dos-and-donts-on-designing-for-accessibility/&quot;&gt;Dos and don&#39;ts on designing for accessibility&lt;/a&gt;&lt;/cite&gt; by UK Gov Design Team. Print them out and hang them around the studio/office.
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntlc6bok3chem&quot; href=&quot;https://www.w3.org/WAI/ARIA/apg/patterns/&quot; class=&quot;c-described-link__label&quot;&gt;ARIA Authoring Practices Guide (APG) Patterns&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntlc6bok3chem&quot; class=&quot;c-described-link__description&quot;&gt;Learn how to make accessible web components and widgets with ARIA roles, states and properties and by implementing keyboard support. Provides one or more ways of implementing each pattern, demonstrated with functional examples.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntli5ciat8qeub&quot; href=&quot;https://www.w3.org/WAI/ARIA/apg/practices/names-and-descriptions/&quot; class=&quot;c-described-link__label&quot;&gt;ARIA Authoring Practices Guide (APG) Names and descriptions&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntli5ciat8qeub&quot; class=&quot;c-described-link__description&quot;&gt;Learn how to provide elements with accessible names and, where appropriate, accessible descriptions.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntly4y3m6ntj2&quot; href=&quot;https://www.w3.org/WAI/fundamentals/&quot; class=&quot;c-described-link__label&quot;&gt;W3 A11y fundamentals guide&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntly4y3m6ntj2&quot; class=&quot;c-described-link__description&quot;&gt;An industry standard resource that provides information for getting started with accessibility&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntloju1p62kozq&quot; href=&quot;https://www.davidway.ie/blog/accessibility-bootcamp-takeaways/&quot; class=&quot;c-described-link__label&quot;&gt;Bootcamp takeaways - Blog post&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntloju1p62kozq&quot; class=&quot;c-described-link__description&quot;&gt;Just a lil blog post I whipped up after completing one of the Deques&#39; bootcamp courses&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntlz8e8s3a0fwr&quot; href=&quot;https://www.davidmacd.com/blog/wai-aria-accessbility-for-average-web-developers.html&quot; class=&quot;c-described-link__label&quot;&gt;Aria attributes; A quick guide&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntlz8e8s3a0fwr&quot; class=&quot;c-described-link__description&quot;&gt;Developers should be able to understand what aria attributes do and when to use them and, most importantly, when not to use them.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl28n1qurm679&quot; href=&quot;https://a11ysupport.io/&quot; class=&quot;c-described-link__label&quot;&gt;Assistive Technologies support reference&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl28n1qurm679&quot; class=&quot;c-described-link__description&quot;&gt;A reference to tell if your code will work with assistive technologies.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntly889sfsgbtn&quot; href=&quot;https://www.powermapper.com/tests/screen-readers&quot; class=&quot;c-described-link__label&quot;&gt;Screen Reader Browser combination support reference&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntly889sfsgbtn&quot; class=&quot;c-described-link__description&quot;&gt;Overall reliability of HTML, CSS and ARIA features designed for assistive technology in different screen reader / browser combinations.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl6j1i4r2e6er&quot; href=&quot;https://html5accessibility.com/&quot; class=&quot;c-described-link__label&quot;&gt;HTML5 accessibility feature browser support&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl6j1i4r2e6er&quot; class=&quot;c-described-link__description&quot;&gt;Get the current accessibility support status of HTML5 features across major browsers.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntln8apc06rpz&quot; href=&quot;https://accessibility.blog.gov.uk/&quot; class=&quot;c-described-link__label&quot;&gt;Accessibility in government, GOV.UK blog&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntln8apc06rpz&quot; class=&quot;c-described-link__description&quot;&gt;A blog that documenting how the GDS accessibility team is rebuilding inclusive digital services across the UK Government.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl5ygq7qhp1bm&quot; href=&quot;https://raindrop.io/a11ycat/a11y-cat-digital-accessibility-resources-35893871&quot; class=&quot;c-described-link__label&quot;&gt;A11y Cat Digital Accessibility Resources&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl5ygq7qhp1bm&quot; class=&quot;c-described-link__description&quot;&gt;A link directory for professionals who work with digital accessibility.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl1lqswray9o8&quot; href=&quot;https://www.foreveryone.design/&quot; class=&quot;c-described-link__label&quot;&gt;foreveryone.design&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl1lqswray9o8&quot; class=&quot;c-described-link__description&quot;&gt;67% of accessibility defects originate in the design process. Shift the fix left by using this library of high-quality resources for UX/UI designers.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;courses&quot; tabindex=&quot;-1&quot;&gt;Courses &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibilty-toolkit/accessibility-toolkit/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s a list of accessibility training materials, because the best tool box you can fill is the one between your ears...&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl3h6q8fk630z&quot; href=&quot;https://www.linkedin.com/learning/accessibility-first-design/why-accessibility-first-design&quot; class=&quot;c-described-link__label&quot;&gt;Accessibility First Design&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl3h6q8fk630z&quot; class=&quot;c-described-link__description&quot;&gt;A short hour and a half course covering the benefits of an accessibility-first approach to designing digital experiences to build more useful, resilient, and inclusive products.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntl1ynu41no40t&quot; href=&quot;https://dequeuniversity.com/curriculum/instructor-led/bootcamp&quot; class=&quot;c-described-link__label&quot;&gt;Deque: Accessibility Bootcamp&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntl1ynu41no40t&quot; class=&quot;c-described-link__description&quot;&gt;A two-day bootcamp to equip individuals across various technical roles with the fundamental knowledge and domain specific practical a11y skills.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntlu3h1hvavlkb&quot; href=&quot;https://www.accessibilityassociation.org/s/certification&quot; class=&quot;c-described-link__label&quot;&gt;IAAP Certification program&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntlu3h1hvavlkb&quot; class=&quot;c-described-link__description&quot;&gt;The IAAP Certification program offers professional credentials in accessibility, validating knowledge and skills in creating inclusive digital and physical environments.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-described-link&quot;&gt;
&lt;a id=&quot;described-link-id-me47bntlf3rwzn0vrw&quot; href=&quot;https://web.dev/learn/accessibility&quot; class=&quot;c-described-link__label&quot;&gt;Learn Accessibility Course - web.dev&lt;/a&gt;
&lt;span aria-describedby=&quot;described-link-id-me47bntlf3rwzn0vrw&quot; class=&quot;c-described-link__description&quot;&gt;An evergreen course for beginners and advanced web developers. It is not a complete reference on the subject but offers a good overview of accessibility principles, accessibility testing and content design from an accessible perspective.&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Accessibility boot camp takeaways</title>
		<link href="https://david-way.github.io/blog/accessibility-bootcamp-takeaways/"/>
		<updated>2024-11-02T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/accessibility-bootcamp-takeaways/</id>
		<content type="html">&lt;p&gt;I would consider myself reasonably familiar with the accessibility domain. Still, as I&#39;ve had very little formal training, I decided to attend an accessibility boot camp recently. I was looking forward to better understanding the gaps in my knowledge and converting some of those unknowns into known unknowns. It was a fantastic experience, and very encouraging to see how people engaged the team was. These were my takeaways from the 16-hour event.&lt;/p&gt;
&lt;h2 id=&quot;impact-on-user-experience-how-does-accessibility-create-a-more-inclusive-user-experience&quot; tabindex=&quot;-1&quot;&gt;Impact on User Experience: How does accessibility create a more inclusive user experience? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibility-bootcamp-takeaways/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Accessible design is good design. It removes or lowers barriers and improves the experience for all users with and without disabilities.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot; cite=&quot;https://en.wikipedia.org/wiki/Curb_cut_effect&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
The curb cut effect is the phenomenon of disability-friendly features being used and appreciated by a larger group than the people they were designed for. For example, many hearing people use closed captioning. The phenomenon is named for curb cuts – miniature ramps comprising parts of sidewalk – which were first made for wheelchair access in particular places, but are now ubiquitous and no longer widely recognized as a disability-accessibility feature. The curb cut effect is a subset of universal design, which is the purposeful design of an environment so that it is accessible to all people regardless of ability or disability.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Wikipedia&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;These benefits extend to those with permanent, temporary, or situational disabilities as well as those of us with future disabilities. The &lt;a href=&quot;https://www.who.int/health-topics/disability&quot;&gt;WHO ICF report&lt;/a&gt; estimated 1.3 billion people – about 16% of the global population – currently experience significant disability.&lt;/p&gt;
&lt;div class=&quot;u-bleed-container:small u-responsive-table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Type of disability&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Permanent&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Temporary&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Situational&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Physical&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Missing limb&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Broken/injured limb&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Holding a child&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Visual&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Blind&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Cataracts/environmental&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Bright sunlight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Auditory&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Deaf&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Ear infection/failing disability aid&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;In a crowd&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Cognitive&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Learning disability&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stressed/in an emergency&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Using a foreign language&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&quot;product-value-what-is-the-long-term-value-of-prioritizing-accessibility-in-our-work&quot; tabindex=&quot;-1&quot;&gt;Product Value: What is the long-term value of prioritizing accessibility in our work? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibility-bootcamp-takeaways/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A product team could solely make a business case for accessibility as it protects from legal action and associated costs. However, having a reputation as having solid commitment to accessibility can help you gain better trust with your customers and users and associate an inclusive image with the product&#39;s brand.&lt;/p&gt;
&lt;p&gt;The earlier and more frequently you address accessibility defects in the product/feature development process, the less expensive they are to resolve, leaving room for investment in other product areas (the push left principle reduces cost).&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
You can use an eraser on the drafting table or a sledgehammer on the construction site.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Frank Lloyd Wright&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;Finally, it is a moral obligation, a point of pride in our craft as designers and developers, and a selling point or competitive advantage for the product to be best-in-class AAA accessible.&lt;/p&gt;
&lt;h2 id=&quot;team-collaboration-how-can-we-integrate-accessibility-into-everyone-s-responsibilities&quot; tabindex=&quot;-1&quot;&gt;Team Collaboration: How can we integrate accessibility into everyone&#39;s responsibilities? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/accessibility-bootcamp-takeaways/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Treat accessibility defects as defects and prioritize them based on the impact on the excluded user (permanently disabled) and the downstream benefits to all other users (temporarily and situationally disabled).&lt;/p&gt;
&lt;p&gt;Attend accessibility courses and recognize employees willing to develop and contribute accessibility skills to the product and company as part of their career advancement.&lt;/p&gt;
&lt;p&gt;Adhoc accessibility audits (or tune-ups) are a good way to get started but it&#39;s far better to catch issues before they happen. Be proactive about accessibility issues by adding automated accessibility testing and linters into the Integration/Delivery pipeline and by developing a mature accessibility program. Raise awareness across the team/set processes and standards.&lt;/p&gt;
&lt;p&gt;Establish accessibility specialists/champions and a11y-focused team communication channels to share knowledge.&lt;/p&gt;
&lt;p&gt;Learn about the &lt;a href=&quot;https://www.w3.org/WAI/fundamentals/accessibility-principles/&quot;&gt;POUR principles&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perceivable&lt;/li&gt;
&lt;li&gt;Operable&lt;/li&gt;
&lt;li&gt;Understandable&lt;/li&gt;
&lt;li&gt;Robust&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Teach everyone (Business, Design, Development, and QA) how to &lt;a href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over&quot;&gt;use a screen reader to a basic level&lt;/a&gt;, and hold sessions where the team tries to achieve tasks in the product using screen readers/or keyboards only and discuss findings and investigate issues.&lt;/p&gt;
&lt;p&gt;Add (or link out to) a Web Accessibility Checklist to your Pull Request template, for example:&lt;/p&gt;
&lt;pre class=&quot;language-md&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&lt;span class=&quot;token title important&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;##&lt;/span&gt; Definition of done for Design&lt;/span&gt;

&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Design has been user tested (include keyboard and screen reader during design review or during prototyping)
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Design is responsive to all screen zoom levels and viewport widths and supports dynamic content
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Design is achievable using Design System assets/patterns
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Empty states and content of varied lengths have been considered
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Images are marked as decorative, or alt text is provided
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Colors used meet contrast requirements and are available in the Design System color palette.
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] All information is communicated in ways other than color alone
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Writing has been reviewed and confirmed to be at the appropriate reading level
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Design establishes a logical reading and focus order for the information
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Heading levels show in the correct hierarchical order without skipping
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Link labels clearly describe what the link is for or where it leads
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] Hidden content has been identified and provided (alternative text for unique regions, clickable elements such as links, icon buttons, or non-decorative images)
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] All controls are close to the things they&#39;re controlling
&lt;span class=&quot;token list punctuation&quot;&gt;-&lt;/span&gt; [ ] I am proud of the level of user experience achieved by the Design&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>The theme toggle, an empty vanity</title>
		<link href="https://david-way.github.io/blog/dark-mode-toggles/"/>
		<updated>2023-02-10T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/dark-mode-toggles/</id>
		<content type="html">&lt;p&gt;&lt;strong&gt;&lt;abbr&gt;TLDR&lt;/abbr&gt;:&lt;/strong&gt; This site has a &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; theme, but it doesn&#39;t have a dark/light mode toggle or a theme selector because your browser/device already has one.&lt;/p&gt;
&lt;p&gt;The primary goal for this site was to force myself to write more. I always enjoy having written, but I rarely enjoy the act of writing itself.&lt;/p&gt;
&lt;p&gt;One of the more enjoyable aspects of having this site is having a place to tinker with things and explore ideas. Sometimes that enjoyment becomes a &amp;quot;productive&amp;quot; distraction from that primary goal.&lt;/p&gt;
&lt;p&gt;A &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; theme one of the first things I implemented for this site.&lt;/p&gt;
&lt;p&gt;But before adding a feature for a features sake I asked myself the following two questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Should you provide a &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; mode?&lt;/li&gt;
&lt;li&gt;Should I add a theme toggle control?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;u-bleed-container:x-small u-mv:16&quot;&gt;
&lt;div class=&quot;u-border:device&quot;&gt;
&lt;div class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/7IBMMDz3G--480.avif 480w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/7IBMMDz3G--480.webp 480w&quot;&gt;&lt;img alt=&quot;The not-important site in dark mode&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/7IBMMDz3G--480.png&quot; width=&quot;480&quot; height=&quot;820&quot;&gt;&lt;/picture&gt;
&lt;/div&gt;
&lt;div class=&quot;u-display:none-when-color-scheme:light&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/9uQ3FqWwOD-480.avif 480w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/9uQ3FqWwOD-480.webp 480w&quot;&gt;&lt;img alt=&quot;The not-important site in light mode&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/9uQ3FqWwOD-480.png&quot; width=&quot;480&quot; height=&quot;820&quot;&gt;&lt;/picture&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;figcaption&gt;
This very site, &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;brooding in dark mode&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;beaming away in light mode&lt;/span&gt;.
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;h2 id=&quot;question-1-should-you-provide-a-darklight-mode&quot; tabindex=&quot;-1&quot;&gt;Question 1: Should you provide a &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; mode? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/dark-mode-toggles/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;
&lt;p&gt;A dark color scheme can reduce eye strain, especially in low-light environments, can extend battery life (for certain OLED display types), and some users find dark mode visually appealing and modern.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;u-display:none-when-color-scheme:light u-bleed-container:default&quot;&gt;
&lt;p&gt;Light mode has been the standard for a long time, and many users are accustomed to it, so it has become an expected feature.&lt;/p&gt;
&lt;p&gt;Light mode is generally more readable in well-lit environments. A &lt;a href=&quot;https://journals.sagepub.com/doi/abs/10.1177/0018720813515509&quot;&gt;Human Factors study suggests light mode enhances the legibility of text&lt;/a&gt;, and as a result, the reading comprehension and proofreading performance of the reader. Light backgrounds can also be more conducive to displaying accurate colors in some scenarios.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Neither dark or light mode is objectively superior; each has its merits and pitfalls that depend on individual preferences and other factors out of your control. The most responsible course of action is obviously to offer both a light and dark mode and let the user decide.&lt;/p&gt;
&lt;p&gt;Once I was finished implementing the &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; mode, I&#39;m slightly embarrassed to say, I was excited to work on a cool toggle switch.&lt;/p&gt;
&lt;h2 id=&quot;question-2-should-i-add-a-theme-toggle-control&quot; tabindex=&quot;-1&quot;&gt;Question 2: Should I add a theme toggle control? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/dark-mode-toggles/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My first intuition was that the answer to this question would be an obvious &amp;quot;yes&amp;quot;. In an effort to honestly evaluate the feature, what follows are the best reasons I could come up with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Appeal of Novelty&lt;/strong&gt;: Because it will be fun (think of all the time we can spend tweaking the easing curve on an elaborate sun into moon animation) 🤓&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optimism bias&lt;/strong&gt;: Because it&#39;s easy. Once you have the theme designed and implemented in CSS Custom properties, the code to implement switching between modes using a toggle is trivial&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bandwagon effect&lt;/strong&gt;: Because everyone has one (someone even built a beautiful site dedicated to &lt;a href=&quot;https://toggles.dev/&quot;&gt;cataloging common theme toggle types&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Vanity&lt;/strong&gt;: Because I put all this effort into supporting a &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; mode, not every site has one, so why not make it discoverable and easily accessible?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Less than convincing. Perhaps you can think of better reasons or perhaps I should have asked a more open question. A question like &amp;quot;How should the user select a theme?&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is a better question as it opens up the mind to lateral possibilities, diverging from the narrow focus of a solution. The next thought came easier.&lt;/p&gt;
&lt;p&gt;Users already have a global and robust way to define their preferred theme and browsers do a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme#browser_compatibility&quot;&gt;good job&lt;/a&gt; of honoring the application of these preferences!&lt;/p&gt;
&lt;figure class=&quot;u-bleed-container:small&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/CGmqmhpy5U-736.avif 736w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/CGmqmhpy5U-736.webp 736w&quot;&gt;&lt;img alt=&quot;The Android theme controls also allow for scheduling for when a particular theme should be applied&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/CGmqmhpy5U-736.png&quot; width=&quot;736&quot; height=&quot;311&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;The Firefox mode selector allows you to explicitly set your preference for the browser or to defer to a preference you&#39;ve set more broadly at the Operating System level&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
ℹ️ However it&#39;s important that the default value should be set to use the system preference and that the users shouldn&#39;t see a &lt;a href=&quot;https://css-tricks.com/flash-of-inaccurate-color-theme-fart/&quot;&gt;Flash of inAccurate coloR Theme&lt;/a&gt; which is very likely as the code to store and and respond to previous preference is going to be running after a page’s first render.
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;These controls work system-wide/device-wide, often at the Operating System level (where the user can set it once) and at a per-application level where users can automatically adjust their preferred theme based on conditions like the time of day or ambient light conditions.&lt;/p&gt;
&lt;figure class=&quot;u-bleed-container:x-small&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/kkXhc6VNwP-738.avif 738w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/kkXhc6VNwP-738.webp 738w&quot;&gt;&lt;img alt=&quot;The Android theme controls also allow for scheduling for when a particular theme should be applied&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/kkXhc6VNwP-738.png&quot; width=&quot;738&quot; height=&quot;914&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;The Android theme controls also allow for scheduling for when a particular theme should be applied&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;From a theming perspective, there is nothing unique enough about this site. Nothing that I should have any reason to think it would be an exception to how a visitor would normally prefer to consume their content. Users spend most of their time on other websites, so they expect your site to work like all the other sites they already know. It&#39;s also reasonable for them to expect those sites to honor configuration decisions they have already made.&lt;/p&gt;
&lt;p&gt;Adding a theme toggle to the page adds design redundancy at the cost of complicating a simple feature. It&#39;s also an extra tab stop for keyboard/screen reader users and an additional eye fixation as well as extra code to maintain.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
…[Perfection is achieved] not when there is nothing left to add, but when there is nothing left to take away.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Antoine de Saint-Exupery. (2022). Wit &amp; Wisdom. The Week, (1413), 21.&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;Maybe, some users will never discover and beam in wonder at the exceptional &lt;span class=&quot;u-display:none-when-color-scheme:dark&quot;&gt;dark&lt;/span&gt;&lt;span class=&quot;u-display:none-when-color-scheme:light&quot;&gt;light&lt;/span&gt; theme I toiled away on (a noble sacrifice on my part).&lt;/p&gt;
&lt;p&gt;But maybe, the best theme toggle is the one the user already has.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Telling stories to ourselves</title>
		<link href="https://david-way.github.io/blog/story-telling-in-design/"/>
		<updated>2023-01-28T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/story-telling-in-design/</id>
		<content type="html">&lt;p&gt;Storytelling is how the human mind likes to consume information. Our thoughts synchronize with that of the storyteller. Listening to a well told story is almost to experience it ourselves.&lt;/p&gt;
&lt;p&gt;In design, we rely on it as an efficient and valuable tool for communicating complex information and compelling our listeners to care and engage more deeply with the problem we&#39;re looking at.&lt;/p&gt;
&lt;p&gt;However, stories don&#39;t always need to make logical sense. We are, occasionally, willing to suspend disbelief if the story &lt;em&gt;or&lt;/em&gt; the storyteller is engaging enough...&lt;/p&gt;
&lt;p&gt;While preparing a recent presentation after a large (and what felt at the time like a diligently executed) piece of design research, I was fine-tuning the narrative from the scenario we storyboard-ed earlier that day. Suddenly, a glaringly obvious plot hole appeared to me. An obvious omission that could affect the result and direction of our proposed design. The team of very motivated domain and product experts were working closely together on th project for two weeks straight. Through workshops, user testing sessions, and debriefing sessions, no one thought to bring it up or ask about it? Whatever the cause or causes, it was worrying at this late stage of the project.&lt;/p&gt;
&lt;p&gt;We were scheduled to present our findings and recommendations the next day. Should we reschedule the playback? I scrambled to the team; hopefully, someone knew the answer. Luckily, this particular question could be answered before the presentation, and it didn&#39;t change or invalidate the design recommendations we were making. But we got lucky...&lt;/p&gt;
&lt;p&gt;Times like these highlight the importance of adhering to a good research process. Mistakes happen, lapses in judgment, bias, and blind spots. We are human after all. In a fast-moving project, some themes can go unnoticed, or their impact can be underappreciated. Some half-formed ideas can be ripped from your focus by other priorities before they are fully formed and interrogated.&lt;/p&gt;
&lt;p&gt;A systematic approach will catch more information and represent it more clearly but looking back, the main contributing factor to this episode was not making enough time to write and consolidate my understanding as I went.&lt;/p&gt;
&lt;p&gt;Writing is really good at finding holes in your knowledge or reasoning. If you can&#39;t entirely outline a thought or set of points into a written sentence or paragraph, then you probably need to finish exploring or formulating that thought.&lt;/p&gt;
&lt;p&gt;Discussion and presentation can encourage us to consciously or unconsciously follow the happy path, ignoring difficult threads of thought in need of more robust exploration.&lt;/p&gt;
&lt;p&gt;Writing concisely and frequently throughout the design process is just as important as any other design process task. Summarizing learnings and ideas. Forming them into cogent sentences. Writing down checklists of questions and, importantly, circulating this information frequently with the team helps form a more comprehensive understanding with better quality ideas and solutions.&lt;/p&gt;
&lt;p&gt;Keep telling your stories designers. But to avoid plot holes (and heart attacks), write, share, and refine them diligently first.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Why designers should learn VoiceOver</title>
		<link href="https://david-way.github.io/blog/why-designers-should-learn-voice-over/"/>
		<updated>2022-08-12T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/why-designers-should-learn-voice-over/</id>
		<content type="html">&lt;p&gt;I used to watch our Quality Assurance (QA) Engineers with concern, confusion, and a mild sense of awe as they interrogated my designs with what I could only describe at the time as their &#39;magical talking tools&#39; (a screen reader).&lt;/p&gt;
&lt;p&gt;When they explained why some cryptic combination of keys they were mashing was not resulting in the information or behavior they were expecting, I couldn&#39;t help but feel defeated.&lt;/p&gt;
&lt;p&gt;The first goal in the debugging process is to reproduce the bug; you need to know with certainty how to reproduce the bug to know for certain that you&#39;ve solved the problem.&lt;/p&gt;
&lt;p&gt;Resolving complex bugs with another (very patient) person in the loop can be a lengthy process. To speed things up, I decided it was worth figuring out how to use a screen reader myself and I&#39;m very grateful I did. Learning how to use these tools, how they worked, and the value they provide to a significant group of our users has helped me to assess designs through a new lens.&lt;/p&gt;
&lt;h2 id=&quot;what-is-voiceover-anyway&quot; tabindex=&quot;-1&quot;&gt;What is VoiceOver anyway? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.apple.com/accessibility/vision/&quot;&gt;VoiceOver&lt;/a&gt; is the screen reader built into macOS. A screen reader is a piece of assistive technology primarily used by people with vision impairments to consume written content online through audio or touch output.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
It&#39;s worth noting that people with visual impairments aren&#39;t the only users of screen readers (3% of users report cognitive impairments, 2% have motor disabilities, and up to 12% have no disability at all.)
&lt;/span&gt;
&lt;div class=&quot;c-inset-text__link-container&quot;&gt;&lt;a href=&quot;https://webaim.org/projects/screenreadersurvey8/&quot;&gt;Screen Reader User Survey&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;When we design for accessibility we elevate the usability of a designs for all users. The non-visual nature of the accommodations required for screen reader users means they can frequently be forgotten or seen as the developers job alone.&lt;/p&gt;
&lt;p&gt;Screen reader support is a fundamental requirement to building accessible software (a costly one when left as an afterthought), and such an important aspect of the experience that designers have a lot to contribute to implementing it correctly.&lt;/p&gt;
&lt;p&gt;Learning how to use a screen reader will make you better equipped at making inclusive decisions at every step of design process. And if you&#39;re reading this on an apple product, good news, you already have a screen reader installed on your device.&lt;/p&gt;
&lt;h2 id=&quot;how-does-a-screen-reader-work-with-a-web-browser&quot; tabindex=&quot;-1&quot;&gt;How does a screen reader work with a web browser? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A web browser renders a website’s HTML, CSS, and JavaScript files to construct the web page you designed. The HTML defines the structure and content of the page.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
CSS adjusts the appearance, and JavaScript adds interactivity and dynamic elements.
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Example HTML tag containing some &quot;Content&quot; --&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Example HTML tag with a `role` attribute (with the value alert), containing some &quot;Content&quot; --&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;alert&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Example HTML anchor tag, with a `href` attribute, nested in another HTML tag --&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://developer.mozilla.org&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;MDN&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The HTML tags, the attributes we append to them, and how we nest and combine them imbue semantic meaning to the content of our designs. HTML results two things we should be concerned about:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The visible UI we see rendered by browser&lt;/li&gt;
&lt;li&gt;The corresponding accessibility tree, which is the underlying structure that is read by a screen reader&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;u-bleed-container:medium&quot;&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/F2sbTzdFu4-659.avif 659w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/F2sbTzdFu4-659.webp 659w&quot;&gt;&lt;img alt=&quot;A diagram of an example accessibility tree, depicting the hierarchical relationship of HTML elements and the implicit information they supply to the screen reader, such as the elements locations, input type, name, and state.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/F2sbTzdFu4-659.svg&quot; width=&quot;659&quot; height=&quot;383&quot;&gt;&lt;/picture&gt;
  &lt;figcaption&gt;A diagram of an example accessibility tree depicting the hierarchical relationship of HTML elements and the implicit information they supply to the screen reader, such as the elements&#39; locations, input type, name, and state.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;visual-affordances&quot; tabindex=&quot;-1&quot;&gt;Visual affordances &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An affordance is a compelling indicator of how an item on a page operates that includes its perceived and actual functions. Essentially, they are features that teach you how to use the functions or make them more intuitive. For example,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A handle on a teapot teaches you how to hold it, and the spout suggests what to do next.&lt;/li&gt;
&lt;li&gt;The underline of a link is an example of a convention-based affordance. Users learn that &lt;a href=&quot;https://www.w3.org/TR/WCAG20-TECHS/F73.html&quot;&gt;an underline indicates this text is a link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Using a shopping cart icon to indicate the concept of online purchases (a metaphorical affordance).&lt;/li&gt;
&lt;li&gt;Making buttons look 3D or clickable through copy, shape, and/or color.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We rely heavily on visually available affordances to make our UI intuitive to non-screen reader users. However, these clues are not available to visually impaired users, so we need to provide equivalent information in non-visual methods.&lt;/p&gt;
&lt;h3 id=&quot;non-visual-affordances&quot; tabindex=&quot;-1&quot;&gt;Non-visual affordances &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The non-visual affordances required by screen readers are provided when using the correct HTML elements and attributes to render our UI. The semantics of HTML let us express the affordances we offer to sighted users in a way that a screen reader can announce.&lt;/p&gt;
&lt;p&gt;Semantics or meaning is given to the content in a web page through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hidden and associated content - provided through labelling, using headings, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes&quot;&gt;aria attributes&lt;/a&gt; or related label elements&lt;/li&gt;
&lt;li&gt;Containing element - choosing the correct tag type or tag roles: is it a list, a button, or the sidebar of our site?&lt;/li&gt;
&lt;li&gt;The location the elements/content is placed - for example, is it a parent, child, or sibling of another element?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;working-with-the-screen-reader&quot; tabindex=&quot;-1&quot;&gt;Working &lt;em&gt;with&lt;/em&gt; the screen reader &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The following image illustrates two implementations of a page that could be styled to render with a visually identical result. Both of which would provide a significantly different experience for a sighted vs. a screen reader user.&lt;/p&gt;
&lt;figure class=&quot;u-bleed-container:medium&quot;&gt;
  &lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/DGMMr-vfgk-656.avif 656w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/DGMMr-vfgk-656.webp 656w&quot;&gt;&lt;img alt=&quot;A diagram displaying two HTML approaches to structure a page of content. One uses semantically correct tags, and the other achieves the same visual result but with only `div` tags.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/DGMMr-vfgk-656.svg&quot; width=&quot;656&quot; height=&quot;382&quot;&gt;&lt;/picture&gt;
  &lt;figcaption&gt;A diagram displaying two HTML approaches to structure a page of content. One uses semantically correct tags, and the other achieves the same visual result but with only &lt;code&gt;div&lt;/code&gt; tags.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Being aware of and using the appropriate HTML tags (along with their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles&quot;&gt;implicit roles&lt;/a&gt;) goes a long way to ensuring the content of your page is providing a usable experience for your screen reader users.&lt;/p&gt;
&lt;p&gt;Using roles and ARIA attributes provides several additional mechanisms for adding labels, and descriptions and establishing relationships between elements when semantic HTML alone is insufficient.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example of a role attribute applied to a HTML tag&lt;/strong&gt; - The alert role is used to announce an important and usually time-sensitive message to the user.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;alert&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example of aria attributes being applied to a HTML tag&lt;/strong&gt; - The aria-expanded attribute is set on an element to indicate if a control is expanded or collapsed, and whether or not the controlled elements are displayed or hidden.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-expanded&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-controls&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;widget1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show widget&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;widget1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;this-sounds-like-a-lot&quot; tabindex=&quot;-1&quot;&gt;This sounds like a lot... &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Learning &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;every &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element&lt;/a&gt; and attribute is obviously not a prerequisite to web design. Many tools can enable you to learn at the point of need and help you discover issues and resolve them as you go.&lt;/p&gt;
&lt;p&gt;Plenty of resources document common patterns and pitfalls with advice on keyboard interactions you should be aware of and the correct ARIA roles, states, and properties to use. A great example worthy of a bookmark is the &lt;a href=&quot;https://www.w3.org/WAI/ARIA/apg/patterns/&quot;&gt;W3 ARIA Authoring Practices Guide (APG)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Being familiar with using a screen reader enables you to better assess the hidden content and practices you&#39;ll need to consider to make your designs a good experience for all of your users.&lt;/p&gt;
&lt;h4 id=&quot;a-simple-example&quot; tabindex=&quot;-1&quot;&gt;A simple example &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Lets explore two solutions to the icon button patterns as an example of how to label an action in both a visual and non-visual way.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Option A&lt;/strong&gt;, the inner &lt;code&gt;svg&lt;/code&gt; image element is hidden from the accessibility tree due to the &lt;code&gt;aria-hidden&lt;/code&gt; attribute. However, the equivalent text content of &amp;quot;Menu&amp;quot; has been provided using the &lt;code&gt;aria-label&lt;/code&gt; attribute. This results in the screen reader announcing these elements as &amp;quot;Menu button&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Option A. --&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Menu&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;focusable&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-hidden&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;path&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;m...&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An alternative technique, &lt;strong&gt;Option B&lt;/strong&gt;, delivers the same experience, this time using plain text inside a &lt;code&gt;span&lt;/code&gt; element that has been visually hidden using a &lt;code&gt;CSS&lt;/code&gt; class. The content of the &lt;code&gt;button&lt;/code&gt; is still available to the screen reader.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- Option B. --&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-hidden&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;true&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;focusable&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;path&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;m...&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;visually-hidden&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; Menu &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Both example solutions contain visually hidden content, content that you should be aware needs to be there and content you as a designer should be contributing to.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
Note we didn&#39;t need to include the word &amp;quot;button&amp;quot;. The screen reader appends that content because of the implicit role of the &lt;code&gt;button&lt;/code&gt; element.
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;If we had labeled the element as &amp;quot;Menu button&amp;quot;, a screen reader would annoyingly announce it as &amp;quot;Menu button button&amp;quot;. Navigating these subtle gotchas and conventions becomes second nature as you interact with a web document more frequently using a screen reader.&lt;/p&gt;
&lt;h2 id=&quot;testing-designs-for-screen-reader-experience&quot; tabindex=&quot;-1&quot;&gt;Testing designs for screen reader experience &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Of course, nothing beats testing your designs with someone who primarily accesses the web through assistive technologies like a screen reader. However, familiarizing yourself with the accessibility tools available, how to use a screen reader, and understanding how the screen reader conveys non-visual content will help you make better informed content, layout, and behavioral design.&lt;/p&gt;
&lt;p&gt;I have written a concise onboarding guide for designers to &lt;a href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over&quot;&gt;learn the bare minimum to start testing designs with VoiceOver&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;references&quot; tabindex=&quot;-1&quot;&gt;References &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/WAI/ARIA/apg/patterns/&quot;&gt;W3 ARIA Authoring Practices Guide (APG)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.deque.com/axe/devtools/chrome-browser-extension/&quot;&gt;axe DevTools browser extension&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ibm.com/able/toolkit/tools&quot;&gt;IBM Equal Access Checker&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://firefox-source-docs.mozilla.org/devtools-user/accessibility_inspector/&quot;&gt;Firefox&lt;/a&gt; or &lt;a href=&quot;https://developer.chrome.com/docs/devtools/accessibility/reference/#pane&quot;&gt;Chrome&lt;/a&gt; accessibility inspector panel.&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>VoiceOver Screen reader, a quick-start guide</title>
		<link href="https://david-way.github.io/blog/how-to-get-started-with-voice-over/"/>
		<updated>2022-08-12T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/how-to-get-started-with-voice-over/</id>
		<content type="html">&lt;p&gt;Getting started with a screen reader has never been more straightforward and accessible. If you&#39;re reading this on an Apple device, you already have a screen reader installed and may have even turned it on by accident.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
Unsure what a screen reader is or want to learn more about the benefits of familiarizing yourself with a screen reader. In that case, I&#39;ve also written about &lt;a href=&quot;https://david-way.github.io/blog/why-designers-should-learn-voice-over&quot;&gt;why designers should learn to use VoiceOver&lt;/a&gt;.
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-to-use-a-screen-reader&quot; tabindex=&quot;-1&quot;&gt;How to use a screen reader &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are the controls required to use VoiceOver to a basic level.&lt;/p&gt;
&lt;div class=&quot;u-bleed-container:medium u-responsive-table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Command&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Keys&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Turn VoiceOver on/off&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;F5&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Or on the expanded keyboard, &lt;code&gt;fn&lt;/code&gt; + &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;F5&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Issue command to VoiceOver&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;command&lt;/code&gt; + &lt;code&gt;option&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;These are also referred to as the &lt;code&gt;VO&lt;/code&gt; key. It&#39;s best to use your middle and ring finger respectively&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Move around&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Basic navigation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Next/Previous item&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;VO&lt;/code&gt; + left/right arrow key&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Go into/Exit out of collection&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;VO&lt;/code&gt; + &lt;code&gt;SHIFT&lt;/code&gt; + up/down arrow key&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;for example, move &lt;em&gt;out&lt;/em&gt; of a table or &lt;em&gt;into&lt;/em&gt; a panel like web page view&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Simulate double mouse click&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;VO&lt;/code&gt; + &lt;code&gt;SPACE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Intermediate&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Skip through page headings&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;VO&lt;/code&gt; + &lt;code&gt;command&lt;/code&gt; + &lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Commonly used to skim a page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Interrupt Voice Over&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;control&lt;/code&gt; key&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Rotor/Uber key&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;VO&lt;/code&gt; + &lt;code&gt;U&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Change voice rate&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;control&lt;/code&gt; + &lt;code&gt;option&lt;/code&gt; + &lt;code&gt;command&lt;/code&gt; + arrow up/down&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Press and hold&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;VoiceOver has its built in tutorial and is worth the ~20 minutes it takes to complete. You can find it by opening &lt;code&gt;System Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Accessibility&lt;/code&gt; &amp;gt; &lt;code&gt;VoiceOver&lt;/code&gt; &amp;gt; &lt;code&gt;VoiceOver training&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To stay familiar with the basics of VoiceOver, I find it helpful to attempt to complete a task with it once a week, for example, sending an email or reading a news article.&lt;/p&gt;
&lt;p&gt;To test yourself, try lowering your screen brightness to it&#39;s lowest setting and attempt to use &lt;a href=&quot;https://www.wikipedia.org/&quot;&gt;wikipedia&lt;/a&gt; to find out how many people were on the Titanic.&lt;/p&gt;
&lt;h2 id=&quot;cheatsheets&quot; tabindex=&quot;-1&quot;&gt;Cheatsheets &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Refer to (or bookmark) the &lt;a href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over/&quot;&gt;command table&lt;/a&gt; above or download and print the following cheat sheets to have them available on your desk.&lt;/p&gt;
&lt;h3 id=&quot;basic-commands&quot; tabindex=&quot;-1&quot;&gt;Basic commands &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;u-bleed-container:medium&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/FcFZJ-HyBS-1208.avif 1208w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/FcFZJ-HyBS-1208.webp 1208w&quot;&gt;&lt;img alt=&quot;A diagram displaying a list of 5 basic commands for VoiceOver, 1. Command + F5 to toggle VoiceOver on/off, 2. Command + Option, this combination is referred to as the VO key, 3. VO key + arrow left/right to navigate next/previous 4. VO key + Space to simulate a double mouse click,  5. VO + Shift + up/down arrow keys to Go into/Exit out of a region.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/FcFZJ-HyBS-1208.svg&quot; width=&quot;1208&quot; height=&quot;621&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;A diagram displaying a list of 5 basic commands for VoiceOver, 1. Command + F5 to toggle VoiceOver on/off, 2. Command + Option, this combination is referred to as the VO key, 3. VO key + arrow left/right to navigate next/previous 4. VO key + Space to simulate a double mouse click,  5. VO + Shift + up/down arrow keys to Go into/Exit out of a region.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&quot;intermediate-commands&quot; tabindex=&quot;-1&quot;&gt;Intermediate commands &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-get-started-with-voice-over/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;figure class=&quot;u-bleed-container:medium&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/fq15oPrZnk-933.avif 933w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/fq15oPrZnk-933.webp 933w&quot;&gt;&lt;img alt=&quot;A diagram displaying a list of 4 intermediate level commands for VoiceOver, 1. VO + Command + H to navigate through the heading elements on the page, a common method for skimming a page, 2. Control to interrupt VoiceOver output, 3. VO key + U open the Rotor quick menu 4. Shift + VO key + Command + to simulate a double mouse click,  5. VO + Shift + up/down arrow keys to adjust VoiceOver settings&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/fq15oPrZnk-933.svg&quot; width=&quot;933&quot; height=&quot;621&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;A diagram displaying a list of 4 intermediate level commands for VoiceOver, 1. VO + Command + H to navigate through the heading elements on the page, a common method for skimming a page, 2. Control to interrupt VoiceOver output, 3. VO key + U open the Rotor quick menu 4. Shift + VO key + Command + to simulate a double mouse click,  5. VO + Shift + up/down arrow keys to adjust VoiceOver settings.&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
	</entry>
	
	<entry>
		<title>Merging user input with random noise for smooth animation</title>
		<link href="https://david-way.github.io/blog/flow-field-with-user-interaction/"/>
		<updated>2022-02-15T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/flow-field-with-user-interaction/</id>
		<content type="html">&lt;div class=&quot;u-bleed-container:large u-mt:16&quot;&gt;
&lt;div class=&quot;u-border:device&quot;&gt;
&lt;a href=&quot;https://www.davidway.ie/flow-field/&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/li1o_m9qBh-2560.avif 2560w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/li1o_m9qBh-2560.webp 2560w&quot;&gt;&lt;img alt=&quot;Flow field animation preview&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/li1o_m9qBh-2560.png&quot; width=&quot;2560&quot; height=&quot;1467&quot;&gt;&lt;/picture&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;figcaption&gt;
    &lt;a href=&quot;https://www.davidway.ie/flow-field/&quot;&gt;Try it out&lt;/a&gt;.
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;p&gt;You&#39;ve likely seen some generative art that uses 3-dimensional Perlin noise to generate a flow field to beautifully animate a bunch of particles. Like me, maybe you&#39;ve seen the effect before but didn&#39;t know that is how it was achieved.&lt;/p&gt;
&lt;p&gt;A flow field is just a grid of vectors that smoothly and randomly independently change direction but with local continuity.&lt;/p&gt;
&lt;p&gt;Perlin noise is a function that produces a type of random gradient noise. It was initially created to be used in visual effects (for original movie Tron). A good random number generator produces numbers with no relationship and no discernible pattern. However, Perlin noise is helpful because it produces randomness but with a continuous relationship. Like the type of randomness you see in nature, for example, clouds, waves, and patterned textures like marble or wood burls.&lt;/p&gt;
&lt;p&gt;It can be animated over time to give a mesmerizing whorly mess that can be used to drive a flow field and push a bunch of particles around a screen. The result is fun to watch, but it would be more engaging if the user could interact with the animation.&lt;/p&gt;
&lt;p&gt;It took me a while to devise an approach to achieve having the vectors in the flow field be driven by both the Perlin noise and user input.&lt;/p&gt;
&lt;p&gt;The tool I needed was lerp-ing, or linear interpolation. Usually used to animate between two positions, P5.js has a function that works with vectors.&lt;/p&gt;
&lt;p&gt;I let the flow field vectors animate as expected. I then took a copy of the flow field grid and copied the values from the default flow field.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; rows&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; y&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; cols&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; x&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; cols&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; angle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;noise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xOffset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; yOffset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; zOffset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TWO_PI&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; v &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; p5&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Vector&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromAngle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;angle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      v&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setMag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      flowField&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; v&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      flowFieldEffector&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; flowFieldEffector&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;lerp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; flowFieldEffectorAmount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I took the angle from the user&#39;s interaction on the screen and created an effect vector that would be applied to nearby vectors.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; drawAngle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createVector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mouseX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mouseY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;angleBetween&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;token function&quot;&gt;createVector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;pmouseX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pmouseY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; newVectorToImpart &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; p5&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Vector&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fromAngle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;angle&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
newVectorToImpart&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setMag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then linearly interpolated the array of effect vectors toward the flow field vectors so that the user&#39;s effect would decrease in magnitude with every frame and align its direction with the underlying default flow field vectors.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; flowFieldEffectorCenterIndex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
	Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mouseX &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; scl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mouseY &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; scl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; cols&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
flowFieldEffector&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;flowFieldEffectorCenterIndex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newVectorToImpart&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; flowFieldEffectorCenterIndexNeighbors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getPreGeneratedNeighbors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
	flowFieldEffectorCenterIndex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
flowFieldEffectorCenterIndexNeighbors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;neighborIndex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	flowFieldEffector&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;neighborIndex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newVectorToImpart&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This results in a an animation that interacts with the users input but in a smooth manner that fades away over time.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Product Launch Checklist</title>
		<link href="https://david-way.github.io/blog/product-launch-checklist/"/>
		<updated>2022-01-16T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/product-launch-checklist/</id>
		<content type="html">&lt;p&gt;Your requirements are met, your users are excited, your testing is complete, and your team is racing toward the finish line of another successful delivery…&lt;/p&gt;
&lt;p&gt;You probably didn&#39;t forget anything, anything that&#39;s easy to overlook. Just to be sure though, here&#39;s a final polish checklist to put your mind at ease before you push this thing out the door.&lt;/p&gt;
&lt;h2 id=&quot;interaction-design&quot; tabindex=&quot;-1&quot;&gt;Interaction design &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/product-launch-checklist/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;☑️ Automated &lt;code&gt;a11y&lt;/code&gt; testing passes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.deque.com/axe/devtools/chrome-browser-extension/&quot;&gt;Axe Scan&lt;/a&gt; and the &lt;a href=&quot;https://www.ibm.com/able/toolkit/&quot;&gt;IBM Equal Access Accessibility Checker&lt;/a&gt; can provide automated testing and best practice recommendations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Animation can be disabled&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check that &lt;code&gt;prefers-reduced-motion&lt;/code&gt; preference is honoured. Animations can trigger discomfort for those with vestibular motion disorders.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Bypass blocks are available&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can people navigate sequentially through content directly access to the primary content of the Web page. Does this page need a &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/Techniques/?general/G1&quot;&gt;skip link&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Consistent and identifiable application states&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does the focus and hover interactions for all interactive elements match?&lt;/li&gt;
&lt;li&gt;Is the same language used for system state across the product?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Navigation and navigability&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can every feature be be Perceived, Operated, Understood by using a keyboard or screen reader. Is the styling, features and content of your product robust? Can it be accessed on a wide variety of browsers and with a wide variety of assistive technologies?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Pointer gestures are consistent&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are the correct pointers consistently displayed when you hover over and interact with elements on the page?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Layout consistency, and responsiveness&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Double and then half your content (simulating language translation). Is that what you expected to happen? Are you seeing unexpected wrapping or truncation?&lt;/li&gt;
&lt;li&gt;Change your browser zoom (&lt;code&gt;cmd&lt;/code&gt;/&lt;code&gt;ctrl&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt;) as your layout changes. Is that what you expected to happen? Are visual relationships between (established through spacing and proximity) maintained across different layouts?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Tab order and reading order matches&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What are the actions on this page? Can you access them using the keyboard only? Can you discover and interact with them using a screen reader? Is the order of content focused in a similar way that a sighted user consumes the content of the page?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Timing and timeouts are appropriate&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are your session timeouts at least 2-5 minutes? Do you have an interactivity timer that allows users ample time to complete tasks without being interrupted?&lt;/li&gt;
&lt;li&gt;Throttle your bandwidth and reload each page. Does your design account for empty and loading states. Are loading times appropriate for the content being delivered?&lt;/li&gt;
&lt;li&gt;Are images only as large as they need to be? Is there a significant page re-layout or &lt;a href=&quot;https://www.afasterweb.com/2015/08/29/what-the-jank/&quot;&gt;jank&lt;/a&gt; caused as content and media finish loading?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;content-design&quot; tabindex=&quot;-1&quot;&gt;Content design &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/product-launch-checklist/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;☑️ Heading structure is valid&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check that the semantic heading elements on the page reflect the page organization, skipping heading ranks can be confusing and should be avoided where possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Alternative text is available&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non decorative images have descriptive alternative text or&lt;/li&gt;
&lt;li&gt;Captioning and transcripts is provided for any embedded, or linked to, video content.&lt;/li&gt;
&lt;li&gt;Graphs have alternative tables&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Error messaging is helpful&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do the messages associated with any error states you can trigger identify the problem and cause, and provide a solution (if possible)?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Input feedback in place&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input fields provide feedback at the correct time. Inline errors should validate when the user leaves the field, not during interaction.&lt;/li&gt;
&lt;li&gt;Form data that needs to be server side validated should summarize the errors at the top of the form and link to the fields or sections related to the errors.&lt;/li&gt;
&lt;li&gt;The correct virtual keyboard type is displayed for each input field (type and input node - text, tel, url, email, numeric, decimal, and search).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Labels, instructions, page titles, and links have purposeful text&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do your links make sense on their own. Would someone reading the label of a link know the location that link will take them without needing to decern it from surrounding context?&lt;/li&gt;
&lt;li&gt;Are the page titles set correctly and consistently across the product?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;visual-design&quot; tabindex=&quot;-1&quot;&gt;Visual design &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/product-launch-checklist/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;☑️ Color contrast passes AA minimum&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change your preferred color scheme (light, dark, high contrast mode). Are your focus states, controls, icons, and images still accessible?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Color usage is purposeful but not overloaded&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use color with purpose and never as decoration. Never use color alone to convey information; ensure that colored text and graphics are understandable when viewed without color. Color-blind and low-vision users may not be able to perceive the color differences, and screen readers do not announce colors to non-sighted readers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Content is printable&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check the printed versions of each page. As backgrounds styles will be removed when printing it is important to check that information and state is not lost. This is commonly forgotten with customized checkbox and select form elements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Graphics are consistent&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are your icons and pictograms all from the same suite? If not, are the tone, style and stroke sizes consistent?&lt;/li&gt;
&lt;li&gt;Is all content sentence case or all title case? Check to make sure you have a single approach.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;☑️ Legible typeface usage&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are you displaying &lt;a href=&quot;https://fonts.google.com/knowledge/glossary/faux_fake_pseudo_synthesized&quot;&gt;faux fonts&lt;/a&gt;/font synthesis?&lt;/li&gt;
&lt;li&gt;Are your fonts being applied correctly. Check with a device that doesn&#39;t have your selected fonts installed? Are suitable fallback fonts defined?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🚢🚀🍻 Happy launching!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>The User Experience of Disabled Buttons</title>
		<link href="https://david-way.github.io/blog/ux-of-a-disabled-button/"/>
		<updated>2021-10-11T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/ux-of-a-disabled-button/</id>
		<content type="html">&lt;h2 id=&quot;should-you-use-disabled-buttons&quot; tabindex=&quot;-1&quot;&gt;Should you use disabled buttons? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/ux-of-a-disabled-button/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are two reasons why disabling a button is best avoided.&lt;/p&gt;
&lt;h3 id=&quot;1-state-identification&quot; tabindex=&quot;-1&quot;&gt;1. State Identification &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/ux-of-a-disabled-button/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The difference between a disabled button and a regular button is usually very subtle&lt;sup&gt;*&lt;/sup&gt;, meaning it&#39;s a weak indicator of state that may be missed by many of your users.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;* Designing something to look both disabled and identifiable as a button while achieving adequate contrast is tricky.&lt;/i&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-1-what-does-disabling-a-button-from-a-screen-readers-perspective-mean&quot; tabindex=&quot;-1&quot;&gt;1.1 What does disabling a button from a Screen Readers perspective mean? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/ux-of-a-disabled-button/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;details&gt;
  &lt;summary&gt;What is a &lt;i&gt;Screen Reader&lt;/i&gt;?&lt;/summary&gt;
&lt;p&gt;A screen reader is assistive software primarily used by people with low or no vision. It converts the semantic elements on a web page (for example, text, buttons, images, and links) into audible speech or braille.&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;A disabled button is non-existent to a Screen Reader user, meaning they don&#39;t even get the weak indicator afforded to fully sighted users.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;According to the &lt;a href=&quot;https://www.who.int/en/news-room/fact-sheets/detail/blindness-and-visual-impairment&quot;&gt;World Health Organization&lt;/a&gt;, there are an estimated 285 million people in the world who suffer from some level of visual impairment (including anyone from legally blind, to those with less than 20/20 vision).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;2-unnecessary-cognitive-load&quot; tabindex=&quot;-1&quot;&gt;2. Unnecessary Cognitive Load &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/ux-of-a-disabled-button/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When a disabled button is intended to act as a visual indicator that something on the page or form needs to be fixed/changed before your user can continue.
To those who can identify them, this usage of a disabled button tells them &amp;quot;something&amp;quot; is wrong and provides no more information on what needs to be corrected (the user may assume that something is wrong with the application and that it needs to be reloaded).&lt;/p&gt;
&lt;p&gt;The change required to re-enable a disabled control may be appear to be a simple puzzle for your user but this is an assumption we shouldn&#39;t make for all our users.
Introducing this, potentially, minor frustration for users with or without cognitive disabilities or even familiarity with our product is best avoided in keeping with the &amp;quot;Don&#39;t make me think&amp;quot; principle.&lt;/p&gt;
&lt;p&gt;Due to the contrast issues mentioned before, you can&#39;t rely on the contents of the buttons label to aid your user here, as they may not be able to read it.&lt;/p&gt;
&lt;h2 id=&quot;is-there-another-way&quot; tabindex=&quot;-1&quot;&gt;Is there another way? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/ux-of-a-disabled-button/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are more suitable patterns and approaches available that can help us avoid using disabled buttons.
For example, let&#39;s look at the typical approach of using a disabled button to prevent progress on an incomplete form.&lt;/p&gt;
&lt;p&gt;❌ Don&#39;t&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable the submit button (hoping your user understands that you mean for them to fully complete the form before continuing)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;✅ Do&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mark all required fields (unless all fields are required or there are more optional fields than required)&lt;/li&gt;
&lt;li&gt;Let the user interact with and traverse the form and identify the enabled submit/continue button (both by its label and location)&lt;/li&gt;
&lt;li&gt;Let them attempt to submit the form&lt;/li&gt;
&lt;li&gt;Inform the user precisely what issue is preventing them from continuing. This can be an inline error message or something like the Toast alert pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In other words, allow and use the user&#39;s premature interaction with the control as an opportunity to inform or guide them on how to continue.
This principle can be applied to many instances where disabled buttons are commonly used.&lt;/p&gt;
&lt;!-- ## When should a disabled button be used

![animation showing an asynchronous action triggered by a button temporarily disabling a button](https://raw.github.ibm.com/DWay/not-important/master/src/images/posts/ux-disabled-buttons/disable-button-pattern.gif) --&gt;
</content>
	</entry>
	
	<entry>
		<title>Responsive design at scale; Responding to what?</title>
		<link href="https://david-way.github.io/blog/responsive-systems/"/>
		<updated>2021-05-11T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/responsive-systems/</id>
		<content type="html">&lt;p&gt;I&#39;ve been working on projects that aim to be as inherently responsive as possible to help our customers avoid the headaches of supporting many devices.&lt;/p&gt;
&lt;p&gt;As a result, I&#39;ve learned the value of a systemized approach to responsive design. So today, I will talk about how that differs from the common understanding of responsive design and some other things I&#39;ve learned.&lt;/p&gt;
&lt;p&gt;I&#39;ll be talking more abstractly and not very specifically about the code, so hopefully, there&#39;s something for everyone here.&lt;/p&gt;
&lt;p&gt;So... I&#39;ll start with a definition.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
Responsive web design is a technique for making web pages look good on a variety of devices and screen sizes.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Every responsive design blog post&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;When you start learning about responsive design, slightly fuzzy definitions like this are usually the kind of thing you&#39;ll see.&lt;/p&gt;
&lt;p&gt;This seems straightforward, so let&#39;s unpack this and get started. We can learn the basics of those techniques in the next 5 minutes.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
Responsive web design is a technique for making web pages look good on &lt;strong&gt;a variety of devices and screen sizes&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Every responsive design blog post&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;If we&#39;re designing responsively, we will support multiple screen sizes. Ultimately, this means we must make changes or interventions in our designs to accommodate the real estate differences those screens offer.&lt;/p&gt;
&lt;p&gt;We&#39;ll make interventions to keep our designs looking good, or at least not break them. Let&#39;s look at some tools and techniques available for making these responsive interventions.&lt;/p&gt;
&lt;h2 id=&quot;tools-of-the-trade&quot; tabindex=&quot;-1&quot;&gt;Tools of the trade &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;breakpoints&quot; tabindex=&quot;-1&quot;&gt;Breakpoints &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/break-points.svg&quot; alt=&quot;Nested rectangles abstractly representing three different screen sizes&quot;&gt;&lt;/p&gt;
&lt;p&gt;We&#39;ll start by choosing some screens or window sizes to support; we&#39;ll call these our breakpoints. The purpose of selecting breakpoints is to give us a representative sample of ways that our users will experience our designs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/break-points-1.svg&quot; alt=&quot;break-points-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;Our designs will start mobile-first, meaning our smallest screens are the default layout; any additional space is treated as a progressive enhancement. Space is not something we can assume we&#39;ll have, and it is not required for our designs to work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/break-points-2.svg&quot; alt=&quot;break-points-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;But we&#39;ll make the most of it when we do have it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/break-points-3.svg&quot; alt=&quot;break-points-3&quot;&gt;&lt;/p&gt;
&lt;p&gt;This mobile-first approach can help focus our designs and ensure they work well, first in the more restrictive environments of smaller devices.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/break-points-labelled.svg&quot; alt=&quot;break-points-labelled&quot;&gt;&lt;/p&gt;
&lt;p&gt;So, let&#39;s choose some standard screen sizes and start making our interventions at those points; these are the ones Bootstrap uses.&lt;/p&gt;
&lt;p&gt;We may need to make additional interventions and tweaks to our designs between these points once we have our content in... but these are the main changes we&#39;ll see.&lt;/p&gt;
&lt;h3 id=&quot;media-queries&quot; tabindex=&quot;-1&quot;&gt;Media queries &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The magical media query is the next tool we learn about.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/example-media-query.gif&quot; alt=&quot;example-media-queries.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here&#39;s what they look like if you&#39;ve never seen one (this is the only code I&#39;ll show today). It seems like an &lt;code&gt;If&lt;/code&gt; statement because that&#39;s basically what it is. Just a conditional check on the current screen width, and then some styles to apply when that condition is met.&lt;/p&gt;
&lt;p&gt;In this example, the background of our page is tomato red. The new style is applied if our breakpoint has been reached, setting the background light blue.&lt;/p&gt;
&lt;p&gt;We&#39;ll want to use our breakpoints to intervene in our design. These media queries are how we achieve new layouts at those breakpoints, but instead of simply changing colors, we conditionally apply new dimensions, positions, and directions to our elements.&lt;/p&gt;
&lt;h3 id=&quot;grid-systems-and-percentage-widths&quot; tabindex=&quot;-1&quot;&gt;Grid systems and percentage widths &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/traditional-grid.svg&quot; alt=&quot;traditional-grid.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Next, we have percentage widths and the traditional Grid systems you may already know. Hopefully, it&#39;s easy to see how we can use media queries to systemize our chosen breakpoints and build something like a traditional responsive grid system.&lt;/p&gt;
&lt;p&gt;Responsive Grids allow us to abstract repeatable structures in our designs and divide the space on our page into proportional columns. We use our breakpoints as markers for interventions and choose how to best adapt our content to fit the available space.&lt;/p&gt;
&lt;p&gt;Better still, these columns are sized as percentages of the available space, so our columns constantly proportionally adjust and respond between our breakpoints!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/invision-blog-responsive-hero-rwd-1-animated.gif&quot; alt=&quot;invision-blog-responsive-hero-rwd-1-animated.gif&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;in-conclusion&quot; tabindex=&quot;-1&quot;&gt;In conclusion? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After we apply these tools to our designs, responsive design has been achieved! 🚢&lt;/p&gt;
&lt;p&gt;It&#39;s straightforward to build robust and dynamic designs that adapt to our user&#39;s needs...almost too easy if you ask me.&lt;/p&gt;
&lt;p&gt;Wait, why is the scrollbar only halfway down the page!?&lt;/p&gt;
&lt;h2 id=&quot;be-the-browsers-mentor-not-its-micromanager&quot; tabindex=&quot;-1&quot;&gt;Be the browsers mentor, not its micromanager &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Unfortunately, there are a lot of limitations to these approaches that aren&#39;t immediately intuitive, or they weren&#39;t to me anyway. Much learning around responsive design starts and ends with the material I&#39;ve shared.&lt;/p&gt;
&lt;p&gt;These techniques are not sufficient and never really were. They&#39;re simply the best tools we had for a long time.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot; cite=&quot;https://wcag.com/designers/1-4-1-reflow/&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
Success Criterion 1.4.10 Reflow (Level AA): Content can be presented without loss of information or functionality and without requiring scrolling in two dimensions...&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;Web Content Accessibility Guidelines (WCAG)&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;When it comes to supporting a responsive design as an accessibility requirement (not just supporting some arbitrary screen sizes), there are other factors to consider, ones that can&#39;t be catered for with these techniques.&lt;/p&gt;
&lt;p&gt;The documentation for the reflow success criteria on the Web Accessibility Initiative&#39;s accessibility checklist is a good resource for helping to understand what I mean and is well worth reading. Let&#39;s examine why this basic responsive approach doesn&#39;t solve our reflow problems and why it doesn&#39;t scale well.&lt;/p&gt;
&lt;h3 id=&quot;responsive-vs-systematically-responsive&quot; tabindex=&quot;-1&quot;&gt;Responsive vs. Systematically responsive &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The basic approach I&#39;ve discussed is only really effective where three things are known ahead of time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;context&lt;/strong&gt; of your content (I&#39;ll explain what I mean soon)&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;content&lt;/strong&gt; your designs will contain&lt;/li&gt;
&lt;li&gt;The way your user has &lt;strong&gt;configured&lt;/strong&gt; their browser&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When designing responsively at scale, all three of these are unknowns or known to be variable.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot; cite=&quot;https://alistapart.com/article/dao/&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
When first learning responsive design, we tend to take a print designer&#39;s approach, with fixed widths and fixed paper sizes in mind. In reality, we should embrace the fact that the web doesn&#39;t have the same constraints as printed page, and design with its flexibility in mind.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;A Dao of Web Design by John Allsopp&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;h4 id=&quot;why-they-are-unknown&quot; tabindex=&quot;-1&quot;&gt;Why they are unknown &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-size-vs-context-1.svg&quot; alt=&quot;screen-size-vs-context-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;First, there&#39;s a subtle difference between your user&#39;s &lt;strong&gt;screen size&lt;/strong&gt; and your &lt;strong&gt;user&#39;s context&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Highlighted here, you can see &amp;quot;screen size&amp;quot;. We have relied on this red box for the condition of all our responsive interventions so far. But Our user&#39;s context accounts for a lot more and is independent of screen size in the following ways:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-size-vs-context-zoom.svg&quot; alt=&quot;screen-size-vs-context-zoom&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zoom&lt;/strong&gt; - users have control over the zoom level of the content on their page; notice the screen size doesn&#39;t change, but the content does.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-size-vs-context-translate.svg&quot; alt=&quot;screen-size-vs-context-translate&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt; - Secondly, your content will be translated. Translation often leads to different space requirements for the same content. If you&#39;ve ever found yourself tweaking a fixed width to contain some piece of content exactly, you&#39;ll find your German users are now experiencing a lot of unintended truncation or wrapping.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
Side note: fixed dimensions are your enemy in responsive design. 🔥
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/base-font-settings.png&quot; alt=&quot;base-font-settings&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Base font size/letter spacing&lt;/strong&gt; - Another way the space required by your content can change is due to the control the browsers give to the user over what their base font (or body copy) can be, not only altering the dimensions of our content but also potentially affecting visual hierarchy of our designs. These are tools provided as an aid to the accessibility of our websites. We should accommodate this behavior, not fight it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-size-vs-context-position.svg&quot; alt=&quot;screen-size-vs-context-position&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Position&lt;/strong&gt; - when building at scale, you&#39;re likely building by composing components. Building components, you should also be aware that you&#39;re building containers for variable content in variable contexts.&lt;/p&gt;
&lt;p&gt;The position, and as a result, the proportion of the page your component will occupy, is not always knowable or obvious.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-size-vs-dynamic-content.svg&quot; alt=&quot;screen-size-vs-context-dynamic-content&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic content&lt;/strong&gt; - When building systems for others to use and configure, you rarely control the actual content that gets placed inside those systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zoom&lt;/li&gt;
&lt;li&gt;Language/Internationalization&lt;/li&gt;
&lt;li&gt;Base font size&lt;/li&gt;
&lt;li&gt;Dynamic content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, designing responsively without these things in mind will lead to your content and layout being malformed, obscured, truncated, or challenging to consume for someone, probably not you.
An excellent responsive measure of your UI is how it handles this list of variables.&lt;/p&gt;
&lt;p&gt;Let&#39;s quickly summarize what this means for the old way of being responsive.&lt;/p&gt;
&lt;h3 id=&quot;myth-1-our-breakpoints-are-how-our-users-will-see-our-designs&quot; tabindex=&quot;-1&quot;&gt;Myth #1 - Our breakpoints are how our users will see our designs &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/screen-sizes.svg&quot; alt=&quot;screen-sizes&quot;&gt;&lt;/p&gt;
&lt;p&gt;The massive proliferation of devices means there is no actual set of standard dimensions to design for.&lt;/p&gt;
&lt;p&gt;As we saw, our selected breakpoints are arbitrary to the point of uselessness and are a very shallow representative sample of our user&#39;s context. There are numerous other factors to account for that affect how our users see our designs.&lt;/p&gt;
&lt;h3 id=&quot;myth-2-grids-and-media-queries-allow-us-to-adapt-our-design-to-best-fit-the-available-space&quot; tabindex=&quot;-1&quot;&gt;Myth #2 - Grids and Media queries allow us to adapt our design to best fit the available space &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/nothing-to-respond-to.svg&quot; alt=&quot;nothing-to-respond-to&quot;&gt;&lt;/p&gt;
&lt;p&gt;Being squishy alone is not being responsive. Grids and layouts that depend on media queries don&#39;t adapt to available space. They adapt only to the screen size they&#39;re viewed in.&lt;/p&gt;
&lt;p&gt;Because all these variables are unknown, responsive design is ultimately designed for an environment you&#39;ll never see.&lt;/p&gt;
&lt;p&gt;We must use whatever the content and purpose or intent of our design rather than arbitrary device widths to determine where interventions should be made.&lt;/p&gt;
&lt;h3 id=&quot;myth-3-design-is-aesthetics&quot; tabindex=&quot;-1&quot;&gt;Myth #3 - Design is aesthetics &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Design is a plan for arranging elements in such a way as best to accomplish a particular purpose.&amp;quot; ― Charles Eames, American designer, architect, and filmmaker&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The purpose of design, responsive or not, is not to look nice, not primarily anyway. As old Charlie puts it, design is a plan to purposely arrange elements.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;&lt;strong&gt;Responsive&lt;/strong&gt; Design is a plan for arranging elements in such a way as best to accomplish a particular purpose, &lt;strong&gt;across contexts.&lt;/strong&gt;&amp;quot; ― &lt;s&gt;Charles Eames, American designer, architect, and filmmaker&lt;/s&gt; - Micheal Scott&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Responsive design is an extension of this: maintaining a plan for arranging with purpose across contexts.&lt;/p&gt;
&lt;h3 id=&quot;what-do-you-mean-by-purpose&quot; tabindex=&quot;-1&quot;&gt;What do you mean by purpose? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To clarify what I mean by purpose. The size, position, and relationship elements have between each other on a page; all this is purposeful. Here are some quick samples of examples related to layout.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/law-of-proximity.svg&quot; alt=&quot;law-of-proximity&quot;&gt;&lt;/p&gt;
&lt;p&gt;Law of proximity: Objects close to each other are perceived to be related when compared with separated elements. The amount of spacing between elements can be used to denote relatedness.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/law-scannable-text.svg&quot; alt=&quot;law-scannable-text&quot;&gt;&lt;/p&gt;
&lt;p&gt;Line Measure: The width of a line of text, in characters, is known as its measure. Reasonable measure is critical for the comfortable scanning of successive lines of text. Usually, a value between 45 and 75 characters is reasonable. Note this is independent of screen or font size.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/law-visual-hierachy.svg&quot; alt=&quot;law-visual-hierarchy&quot;&gt;&lt;/p&gt;
&lt;p&gt;Content Hierarchy: A strong and relative visual hierarchy must be created and maintained. What is most important on the page should be obvious to the user. This applies to typography and the visual impact of the other elements on your page.&lt;/p&gt;
&lt;h4 id=&quot;example-of-purpose&quot; tabindex=&quot;-1&quot;&gt;Example of purpose &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/purpose.svg&quot; alt=&quot;Three column of sample body text, each with it&#39;s own header. Each header is closer to each body than each column is to another.&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s look at a simple example to demonstrate purpose in design.
Say we must display 3 pieces of text, each with its own heading.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The 3 text elements have equal visual weight because they are equally important.&lt;/li&gt;
&lt;li&gt;The text elements have a spatial relationship to each other and their headings. They are more related to their headings than to each other.&lt;/li&gt;
&lt;li&gt;The text and their headings have a size relationship to each other, denoting hierarchy and helping with comprehension.&lt;/li&gt;
&lt;li&gt;The text remains readable (a sensible minimum and maximum measure should be maintained)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What must the layout that holds this content achieve to retain this original purpose across contexts?&lt;/p&gt;
&lt;p&gt;Think back to our unknowns (language, context, font size, zoom, position) and how they can interfere with our intended purpose here.
Making judgments on &lt;strong&gt;when&lt;/strong&gt; our layout should adapt to maintain that purpose is not possible when the only adjustments we can make are in relation to screen size.&lt;/p&gt;
&lt;p&gt;Using traditional interventions to maintain the meaning of our designs is an unachievable task. Absolutely not! We&#39;ve just been approaching things with the wrong mindset and from the wrong direction.&lt;/p&gt;
&lt;h3 id=&quot;what-should-we-respond-to&quot; tabindex=&quot;-1&quot;&gt;What should we respond to? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What should we respond to if responding to our user&#39;s screen size is not helpful? Your content is the reason your user visits your site, and its accessibility to them should be your primary concern. But when designing systems or platforms, your content is provided or configured into the product by your customers. Your designs should try to respond to and maintain the purpose or intent of the layout and be robust enough to gracefully handle the additional variable qualities of both content and context.&lt;/p&gt;
&lt;h3 id=&quot;how&quot; tabindex=&quot;-1&quot;&gt;How? &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead of starting on the outside (our screen size), We can start from the inside and work our way out. We want to build our designs in a way that minimizes the need for us to intervene. As we&#39;ve seen, responsive design is designing for an environment you&#39;ll never really see anyway.&lt;/p&gt;
&lt;p&gt;To do this, we should think about our layouts as ways to influence our content with tolerances and acceptable ranges. Think of yourself as the browser&#39;s mentor rather than its micro-manager. If we want our layout to be intrinsically responsive to the content and context it is exposed to, we&#39;ll need better tools.&lt;/p&gt;
&lt;h2 id=&quot;better-tools-of-the-trade&quot; tabindex=&quot;-1&quot;&gt;Better tools of the trade &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;rems-and-modular-scale&quot; tabindex=&quot;-1&quot;&gt;Rems and Modular scale &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/type-hierarchy.svg&quot; alt=&quot;type hierarchy&quot;&gt;&lt;/p&gt;
&lt;p&gt;Starting at the very middle with our text. Rems or root Ems are relative properties where 1 Rem equals one times the default base font size.&lt;/p&gt;
&lt;p&gt;They allow you to build your typographical hierarchy using one or more ratios relative to the base font size.&lt;/p&gt;
&lt;p&gt;This means if the base font is changed (through user settings or browser plugin), the proportions of your typography scales with it, and therefore, the meaning between your type levels is maintained! You can also use rems in the same way for spacing.&lt;/p&gt;
&lt;h3 id=&quot;flexbox-and-css-grid&quot; tabindex=&quot;-1&quot;&gt;Flexbox and CSS Grid &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These tools are relatively new (5 years) but are well-supported by modern browsers. They allow us to describe layouts with no (or much less) human interventions required.&lt;/p&gt;
&lt;p&gt;While Media queries can be viewed as simple &lt;strong&gt;if&lt;/strong&gt; statements based on page size, Flexbox/CSS grid can be viewed as mini algorithms or layout machines that are more context/content-aware and allow us to abstract the purpose of our designs in ways that are independent of things out of our control like zoom, language and font size.&lt;/p&gt;
&lt;h3 id=&quot;flexbox&quot; tabindex=&quot;-1&quot;&gt;Flexbox &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Flexbox lets us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ Set ideal widths/heights and guard rails for when those ideals cannot be met.&lt;/li&gt;
&lt;li&gt;✅ Grow and shrink elements proportionally to each other (maintaining hierarchy and visual impact) or prevent items from growing or shrinking at all.&lt;/li&gt;
&lt;li&gt;✅ Control and and provide context to scoped containers that is independent of the number of elements there will be.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flexbox allows us to set ideal or basis widths - without stopping elements from growing and shrinking when appropriate. It also allows us to grow and shrink related elements at given ratios.&lt;/p&gt;
&lt;p&gt;We can set the minimum and maximum widths for child elements as percentage values of the parent container width. This allows us to mimic some behavior of container queries, letting elements respond to their own size, not the pages. An example will help demonstrate why all this is useful to us.&lt;/p&gt;
&lt;h4 id=&quot;flexbox-example&quot; tabindex=&quot;-1&quot;&gt;Flexbox example &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/sidebar-rule.svg&quot; alt=&quot;sidebar-rule&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Sidebar rule - a Sidebar is defined as an area of secondary importance to the main area of importance
In layout, it is usually safe to equate real estate with importance, so with that in mind with Flexbox
we can build a layout that behaves like as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put &amp;quot;Sidebar&amp;quot; beside the &amp;quot;Main&amp;quot; area, When &amp;quot;Main&amp;quot; is greater than or equal to half the available space (not half the page size).&lt;/li&gt;
&lt;li&gt;When &amp;quot;Sidebar&amp;quot; and &amp;quot;Main&amp;quot; are the same size, &amp;quot;Sidebar&amp;quot; is no longer a sidebar; let&#39;s make an intervention and stack these elements instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This abstraction of a layout has a purpose and can maintain it, independent of screen size and our other variables.&lt;/p&gt;
&lt;h3 id=&quot;css-grid&quot; tabindex=&quot;-1&quot;&gt;CSS Grid &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS grids differ from traditional ones in that they can be configured to adapt to more complex and dynamic content. They can easily infer what to do with additional elements based on some given criteria.&lt;/p&gt;
&lt;h4 id=&quot;css-grid-example&quot; tabindex=&quot;-1&quot;&gt;CSS Grid example &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.l-grid__inner&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;auto-fill&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;minmax&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;15rem&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 1fr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/css-grid-1.svg&quot; alt=&quot;css-grid-1&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here&#39;s an example of some ways you can set up a CSS grid.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/css-grid-2.svg&quot; alt=&quot;css-grid-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;repeat means columns are created on demand to accommodate any number of child elements&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/css-grid-3.svg&quot; alt=&quot;css-grid-3&quot;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;auto-fill&lt;/code&gt; property tells the grid that columns can be added or removed if needed depending on the number of elements and the next value which allows us to set a tolerant range for what we consider to be acceptable sizes of those columns.&lt;/p&gt;
&lt;p&gt;In this case, the minimum column width is 15 times the base font size (maintaining a readable line measure for contained content). The maximum of 1fr means all columns should then expand and equally share any extra space when available.&lt;/p&gt;
&lt;h3 id=&quot;the-difference-between-flexbox-and-css-grid&quot; tabindex=&quot;-1&quot;&gt;The difference between Flexbox and CSS Grid &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/flexbox-vs-grid.svg&quot; alt=&quot;flexbox-vs-grid&quot;&gt;&lt;/p&gt;
&lt;p&gt;You&#39;ll commonly use both Grid and Flexbox in combination with each other but if you&#39;re ever wondering how to choose between these two tools, this little illustration is all you need.&lt;/p&gt;
&lt;p&gt;If you require elements of variable size to behave responsively, &lt;strong&gt;use Flexbox&lt;/strong&gt;; examples might include button groups, category tags, or any text-like content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use CSS grid&lt;/strong&gt; if you require your elements to maintain uniform sizing and 2 dimensional alignment.&lt;/p&gt;
&lt;h3 id=&quot;container-queries&quot; tabindex=&quot;-1&quot;&gt;Container queries &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://david-way.github.io/blog/responsive-systems/images/container-queries.svg&quot; alt=&quot;container-queries&quot;&gt;&lt;/p&gt;
&lt;p&gt;Container queries are a long-awaited, recent addition to the responsive design toolbox. Container queries allow us to apply styles to an element based on the size of the element&#39;s container. This seems like our previously maligned Media queries; however, responding to the element&#39;s available space rather than the page size is a much more powerful and dependable way to base styling decisions.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 380px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;/* When the card is at least 380px wide*/&lt;/span&gt;
	&lt;span class=&quot;token selector&quot;&gt;.c-card&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; row&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* change the layout of its content */&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;inherently-responsive-patterns&quot; tabindex=&quot;-1&quot;&gt;Inherently responsive patterns &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some patterns are more inherently responsive than others and are worth learning about, too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dynamic, progressive disclosure&lt;/strong&gt; - The priority plus is one good example. This pattern usually requires JavaScript. It is inherently responsive because it is agnostic to where it&#39;s placed, how many items you put in it, or the sizes of those items.&lt;/p&gt;
&lt;div&gt;
&lt;iframe height=&quot;300&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Drop Away Nav&quot; src=&quot;https://codepen.io/chriscoyier/embed/GJRXYE?default-tab=result&amp;theme-id=dark&quot; frameborder=&quot;no&quot; loading=&quot;lazy&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/chriscoyier/pen/GJRXYE&quot;&gt;
  Drop Away Nav&lt;/a&gt; by Chris Coyier  (&lt;a href=&quot;https://codepen.io/chriscoyier&quot;&gt;@chriscoyier&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Scrollable tabs&lt;/strong&gt; - This pattern is inherently responsive and easy to interact with because it displays left and right scroll buttons that are hidden when the tabs do not overflow the available area.&lt;/p&gt;
&lt;div&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/KJE43X6r6B-815.avif 815w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/KJE43X6r6B-815.webp 815w&quot;&gt;&lt;img alt=&quot;Scrollable tabs with scroll button(s) visible when the tabs overflow the available area.&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/KJE43X6r6B-815.png&quot; width=&quot;815&quot; height=&quot;98&quot;&gt;&lt;/picture&gt;
&lt;figcaption&gt;
    Source: &lt;a href=&quot;https://mui.com/material-ui/react-tabs/&quot;&gt;MUI React Library&lt;/a&gt;.
&lt;/figcaption&gt;
&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/responsive-systems/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I hope this helped give an idea of the problems and solutions that exist in the responsive design space if you&#39;re starting out.
If you&#39;re interested in learning more, I highly recommend a book called &lt;a href=&quot;https://every-layout.dev/&quot;&gt;Every Layout&lt;/a&gt; by Heydon Pickering and the indispensible resource that is &lt;a href=&quot;https://buildexcellentwebsit.es/&quot;&gt;buildexcellentwebsit.es&lt;/a&gt; by Andy Bell.&lt;/p&gt;
&lt;p&gt;Thanks for reading this far!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Yaml, a quick-start guide</title>
		<link href="https://david-way.github.io/blog/quick-start-guide-to-yaml/"/>
		<updated>2021-04-07T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/quick-start-guide-to-yaml/</id>
		<content type="html">&lt;p&gt;Yaml is a markup like language (used in the &lt;code&gt;.yaml&lt;/code&gt; file type) that aims to make data portable in a way that is easy to read, write and edit by humans &lt;em&gt;and&lt;/em&gt; computers.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;What is a markup language?&lt;/summary&gt;
&lt;p&gt;A &lt;strong&gt;markup up language&lt;/strong&gt; is a system of writing content so that it’s structure conveys meaning.&lt;/p&gt;
&lt;p&gt;Yaml is a data serialization language and not technically a markup language though it functions a lot like one.&lt;/p&gt;
&lt;p&gt;Other markup languages you might be familiar with are HTML, XML and JSON.&lt;/p&gt;
&lt;p&gt;When you compare Yaml structure to other similar systems Yaml requires considerably less content or &amp;quot;decoration&amp;quot; to carry the same amount of information, but is less resilient regarding spacing and formatting as a result.&lt;/p&gt;
&lt;div class=&quot;u-responsive-table-container&quot;&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th align=&quot;left&quot;&gt;Yaml&lt;/th&gt;
      &lt;th align=&quot;left&quot;&gt;XML&lt;/th&gt;
      &lt;th align=&quot;left&quot;&gt;JSON&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;vertical-align:top&quot;&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Bob
    &lt;span class=&quot;token key atrule&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Wicklow&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Ireland&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;vertical-align:top&quot;&gt;&lt;p&gt;&lt;/p&gt;
&lt;pre class=&quot;language-xml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;People&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Bob&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;age&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;30&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;age&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Wicklow, Ireland&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;People&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;vertical-align:top&quot;&gt;&lt;p&gt;&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;People&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Wicklow&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Ireland
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;What is a file really?&lt;/summary&gt;
&lt;p&gt;A &lt;strong&gt;file&lt;/strong&gt; is and object on a computer that is used to store data or information.&lt;/p&gt;
&lt;p&gt;There are many types of files, recognisable by their extension (ie. &lt;code&gt;.doc&lt;/code&gt;, &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.jpg&lt;/code&gt;).
Different file types are optimised for different tasks, like storing video, audio, text, configurations or computer instructions (code).&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;A Yaml document contains fields to store different types of data and aims to use compact formats to describe more complex data structures (eg. lists of items and maps).&lt;/p&gt;
&lt;h2 id=&quot;yaml-structure&quot; tabindex=&quot;-1&quot;&gt;Yaml structure &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The three dashes &lt;code&gt;---&lt;/code&gt; are used to signal the start and end of a Yaml document.&lt;/p&gt;
&lt;p&gt;You structure a YAML document with white-spaces. This means indentation (spaces) and new lines are crucial to a correctly structured Yaml document (always use spaces not tabs). Unless otherwise indicated, newlines indicate the end of a field.&lt;/p&gt;
&lt;h3 id=&quot;key-value-pairs&quot; tabindex=&quot;-1&quot;&gt;Key value pairs &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The simplest and most common field you’ll see in a &lt;code&gt;.yaml&lt;/code&gt; file is a key-value pair.&lt;/p&gt;
&lt;p&gt;Key-value pairs are used for labelling (the key) single pieces of data (the value), like a piece of text or a number.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Example of `key: value` pair&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Note that a space after the colon is mandatory&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Joan smith
&lt;span class=&quot;token key atrule&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;details&gt;
  &lt;summary markdown=&quot;span&quot;&gt;What is the value data of writing like this?&lt;/summary&gt;
&lt;p&gt;A computer can read and use structured data written a lot easier than the unstructured data, for example see the following:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;It&#39;s Joan Smiths 33rd birthday is tomorrow.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, the key aim of Yaml is to be portable, meaning that it can be easily imported, understood by multiple programs and in programming languages.&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id=&quot;blocks-of-text&quot; tabindex=&quot;-1&quot;&gt;Blocks of text &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To store a literal block of text using the pipe (&lt;code&gt;|&lt;/code&gt;) character. New lines are preserved within the block.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;literal_block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
  This entire block of text will be the value of the &#39;literal_block&#39; key,
  with line breaks being preserved.&lt;/span&gt;

  The literal continues until de&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;dented&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; and the leading indentation is
  stripped.&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;comments&quot; tabindex=&quot;-1&quot;&gt;Comments &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Comments begin with a pound or hash sign (&lt;code&gt;#&lt;/code&gt;). A comment is a programmer-readable explanation or annotation of data. It is ignored by the application.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# This is a full line comment, humans only... 🤖&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; value&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;lists&quot; tabindex=&quot;-1&quot;&gt;Lists &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;List or arrays are lines that begin at the same indentation level, starting with a dash followed by a space. A list groups multiple values into the same field.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Here is a list of names grouped into a &quot;name&quot; field&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Jane&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Jill&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# This is an alternative format to achieve the same thing.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Arrays are often represented using square brackets []&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Jane&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Jill&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;dictionary-list&quot; tabindex=&quot;-1&quot;&gt;Dictionary List &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/quick-start-guide-to-yaml/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A dictionary groups more complex values into a single field.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# This is a collection of two link fields&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Each associated with its own label and url fields&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Home&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./home&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;About&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/about&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Journey mapping in the Design Thinking Process</title>
		<link href="https://david-way.github.io/blog/journey-mapping-in-design-thinking/"/>
		<updated>2021-03-31T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/journey-mapping-in-design-thinking/</id>
		<content type="html">&lt;h2 id=&quot;journey-mapping&quot; tabindex=&quot;-1&quot;&gt;Journey mapping &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/journey-mapping-in-design-thinking/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The goal of journey mapping is to get a holistic view of a customer&#39;s experience, understand the tasks and responsibilities currently assigned, and uncover moments of frustration and delight.
Successfully journey mapping highlights opportunities to address customers&#39; pain points, alleviate disconnected areas of the service you provide, create a better experience for your users, and aligns your team.&lt;/p&gt;
&lt;h3 id=&quot;requirements&quot; tabindex=&quot;-1&quot;&gt;Requirements &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/journey-mapping-in-design-thinking/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Journey maps are always helpful, but producing one with a known business goal is usually best. The business goal will inform the level of detail required, what the most impactful or common scenarios you are concerned with, and will be the one most likely to produce insights you&#39;re actually willing to work on.&lt;/li&gt;
&lt;li&gt;A list of potential users: Which personas do you need to include or be aware of?&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;steps&quot; tabindex=&quot;-1&quot;&gt;Steps &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/journey-mapping-in-design-thinking/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Define a scope, choose an entry and exit to an end-to-end customer experience.&lt;/li&gt;
&lt;li&gt;Develop a persona or personas for the actor(s) involved in the experience by analyzing all available information, then conduct contextual inquiries (interviews) with users or Subject Matter Experts (SMEs), direct observation of product/service use, or collect data through surveys from users or potential users.&lt;/li&gt;
&lt;li&gt;Develop empathy maps for each identified persona to synthesize your team&#39;s knowledge about your users as a group.&lt;/li&gt;
&lt;li&gt;Identify journey phases - chunks of meaningful behavior that provide high-level organization of actions, thoughts, and emotions your user experiences.&lt;/li&gt;
&lt;li&gt;Sketch a journey in a format of step-by-step interaction.&lt;/li&gt;
&lt;li&gt;Identify touch points, the users interactions with the actual product and the business (support, sales, etc.). Who performs what?&lt;/li&gt;
&lt;li&gt;Match each touchpoint to each users actions, mindsets/emotions, intents, motivations, and pain points - the behaviours, thoughts, and feelings the actor has throughout the journey.&lt;/li&gt;
&lt;li&gt;Insights - Look for opportunities (along with additional context, such as ownership and metrics) for optimizing the experience.&lt;/li&gt;
&lt;li&gt;Validate your journey map, empathy maps, personas with more research.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;where-journey-maps-fit-into-the-design-thinking-process&quot; tabindex=&quot;-1&quot;&gt;Where journey maps fit into the design thinking process &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/journey-mapping-in-design-thinking/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A journey map helps identify your users, and their pain points and aligns your team&#39;s understanding of both.
Pain points and Empathy Maps help you and your team step into your users&#39; shoes, and inform your user Need Statements.
Need statements help to guide your team&#39;s ideation sessions.
Ideation leads to storyboarding, a new To-Be experience to be prototyped and validated with your users.&lt;/p&gt;
&lt;h2 id=&quot;additional-references&quot; tabindex=&quot;-1&quot;&gt;Additional References &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/journey-mapping-in-design-thinking/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nngroup.com/articles/customer-journey-mapping/&quot;&gt;When and How to Create Customer Journey Maps - Nielsen Norman Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nngroup.com/articles/journey-mapping-101/&quot;&gt;Journey Mapping 101 - Nielsen Norman Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ibm.com/design/thinking/page/toolkit/activity/empathy-map&quot;&gt;Empathy Map toolkit - IBM Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Are CSS utilities for color a good idea?</title>
		<link href="https://david-way.github.io/blog/design-system-color-utilities/"/>
		<updated>2021-02-15T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/design-system-color-utilities/</id>
		<content type="html">&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; Providing color utilities in your design system can be a risk to the accessibility of the products built with it. Providing &lt;a href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;automated, integrated accessibility testing and linting rules&lt;/a&gt; can limit this risk, and providing &lt;a href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;high-level design and usage guidance and technical implementation details together&lt;/a&gt; is a bonus, too.&lt;/p&gt;
&lt;h2 id=&quot;with-great-power&quot; tabindex=&quot;-1&quot;&gt;With great power... &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A footgun refers to something designed to be highly likely to be used in a way that will cause more problems than it solves.&lt;/p&gt;
&lt;p&gt;A CSS utility class applies a single abstracted rule or a collection of simple rules, typically scoped to achieve a particular pattern. In the context of a Design System, it is also an efficient sanctioned/supported way to extend system design decisions to custom components and variants.&lt;/p&gt;
&lt;p&gt;Here is an example of a utility class for applying lead typography styles.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/** _utils.scss - how it&#39;s made */&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.u-type&#92;:lead&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 22px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 400&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 34px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 77rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html - how it&#39;s used --&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-type:lead&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	A lead paragraph is the opening paragraph of an article, book chapter, or
	other written work that summarizes its main ideas.
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;c-inset-text&quot;&gt;
&lt;span&gt;
Unless you&#39;re working with a utility first approach, prefixing utility classes with a &lt;code&gt;u-&lt;/code&gt; is a useful way to make the source of its effect more obvious (utilities will often be &lt;code&gt;!important&lt;/code&gt; with high specificity, overriding other styles, seeing a utility class on an object helps to explain this behavior if it&#39;s unexpected)
&lt;/span&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Providing utility classes to Design System consumers as part of your established API is an easy decision with clear value. Utility classes help developers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Maintain consistency&lt;/strong&gt; - by making it easy to be consistent with color choices and purpose, spacing, typography, shadows, and other aesthetic flourishes that should be globally applied to all components, compositions, extensions, and custom implementations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improve Efficiency&lt;/strong&gt; - utility classes can &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;DRY&lt;/a&gt; out the styles delivered to the browser by abstracting some of the more commonly applied styles and simplify the work required to use the design language to any extensions or customizations of the Design System contents.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Avoid common issues&lt;/strong&gt; - utilities help abstract robust, cross-browser solutions to complex or unintuitive front-end development problems.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Utility classes are very powerful development tool. Our Design System provides utility classes for spacing, elevation, animation, display type, visibility across breakpoints, maintaining aspect ratio, visually joining elements, and scoping different themes inline in a page.&lt;/p&gt;
&lt;p&gt;Though it was one of the most commonly requested, color was the last category of utilities we included. The primary concerns were accessibility-related but also aesthetic. Our experience with customization meant we didn&#39;t trust that these utilities would be used wisely and therefore thought it was safer they never existed in the first place.&lt;/p&gt;
&lt;p&gt;I gathered examples of customer requests related to color and analyzed the themes. When a client wants to apply color to a design, they usually intend to elevate the visual impact of a specific element or &amp;quot;make it pop&amp;quot;, usually in a manner that would be guaranteed to upset the balance or visual hierarchy of the page.&lt;/p&gt;
&lt;p&gt;Another more valid use case was the commonly occurring need to apply colors to elements that colors can be used to reflect system status.&lt;/p&gt;
&lt;h2 id=&quot;solution&quot; tabindex=&quot;-1&quot;&gt;Solution &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What are the accessibility implications of using color as decoration? What are the conventional and cultural connotations of this color. Which users need to receive the information you&#39;re imparting with color? Which colors are safe to use, and where are they safe to use? How can color affect the balance and hierarchy of the page? Is the element you want to make more impactful going to outweigh other elements on the page? These are many questions a designer asks before deciding the appropriate use of a color.&lt;/p&gt;
&lt;p&gt;One solution to minimize the risks of developers not asking (or knowing to ask) these questions was to A. &lt;a href=&quot;https://heydonworks.com/article/how-i-accidentally-killed-several-ux-designers/&quot;&gt;document high-level design guidance and technical implementation details next to each other on the same page&lt;/a&gt;, and B. provide automated tooling to check for accessibility issues and to remind developers to manually check and consider their usage.&lt;/p&gt;
&lt;h3 id=&quot;a-automation-and-tooling&quot; tabindex=&quot;-1&quot;&gt;A. Automation and tooling &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Our product provides a testing suite that performs automated accessibility and visual regression testing, the full depth of which I won&#39;t go into here. However, here is a custom ESLint rule for illustrative purposes that could be use as part of the a wider automated approach. This rule checks all React elements that are using color based utility classes and provides a recommendation to the developer and links to further tools for testing.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token literal-property property&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;suggestion&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token literal-property property&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token literal-property property&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;Manually confirm contrast/Visual balance/Clarity and Consistency for color utility class use&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;token literal-property property&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Possible Accessibility Errors&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;token literal-property property&quot;&gt;recommended&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://webaim.org/resources/contrastchecker/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;token function-variable function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token function-variable function&quot;&gt;JSXAttribute&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
					node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;className&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
					node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;raw&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;u-color:&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;token literal-property property&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
						&lt;span class=&quot;token literal-property property&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;
								1. Manually check this element for color contrast against its background. Include tests for the interaction states if applicable. 
								2. Check if this color is applied to more than 10% of the page; one color should not overpower the other colors on the page.
								3. Is this color used to convey meaning consistently across the application, and does the selected color use align with conventional use or have mismatched cultural connotations to your user?
								4. Check to see if color alone is being used to convey information, and ensure text and graphics are understandable when viewed without color.
							&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;b-documentation-and-guidance&quot; tabindex=&quot;-1&quot;&gt;B. Documentation and guidance &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In a Design System, documenting design guidance/considerations in the same place as the technical implementation guidance is a good idea (not new a new idea).
Here is a sample of some color utility guidance we provide for our status color utilities. The guidance is short and clear. It demonstrates how to use each utility in the context it is best suited to by giving specific examples of when each is appropriate and general warnings to consider when applying color to a UI using utility classes.&lt;/p&gt;
&lt;h4 id=&quot;example-guidance&quot; tabindex=&quot;-1&quot;&gt;Example guidance &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/design-system-color-utilities/&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;⚠️ Color should be used with purpose and never as decoration. Never use color alone to convey information. Ensure that colored text and graphics are understandable when viewed without color. &lt;a href=&quot;https://webaim.org/resources/contrastchecker/&quot;&gt;Test your foreground and background color combinations&lt;/a&gt; to ensure there is enough contrast between them. Colorblind and low-vision users may not be able to perceive the color differences, and screen readers do not announce colors to non-sighted readers.&lt;/p&gt;
&lt;h5&gt;Support colors&lt;/h5&gt;
&lt;p&gt;Conventionally, red represents danger or error, yellow represents a warning, green represents normal or success, and blue represents passive information.&lt;/p&gt;
&lt;h6&gt;Success&lt;/h6&gt;
&lt;p&gt;Use for Success, Confirmed, Completed, or On states.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;element&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-color:success&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;✅ Application submitted
Your reference number is HDJ2123F.
Example of appropriate use of the success color on a status indicator&lt;/p&gt;
&lt;h6&gt;Warning&lt;/h6&gt;
&lt;p&gt;Use for Warning and Caution states.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;element&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-color:warning&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;⚠️ Verification required
Example of appropriate use of the warning color on a status indicator&lt;/p&gt;
&lt;h6&gt;Danger&lt;/h6&gt;
&lt;p&gt;Use for Error, Failure, Reduction, Cancellation, and Incorrect usage states.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;element&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-color:danger&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;🔻$4.04&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Example of appropriate use of the danger color on an adjustment indicator&lt;/p&gt;
&lt;h6&gt;Info&lt;/h6&gt;
&lt;p&gt;Use for Additional information, Help and Exceptions states.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;element&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;u-color:info&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ℹ️ Planned office closure
Example of appropriate use of the info color on a status indicator&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Mandala generator</title>
		<link href="https://david-way.github.io/blog/mandala-generator/"/>
		<updated>2021-01-02T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/mandala-generator/</id>
		<content type="html">&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;c-block-quote&quot; cite=&quot;https://artincontext.org/what-is-a-mandala/&quot;&gt;
&lt;p class=&quot;c-block-quote__content&quot;&gt;
A mandala can be described as a circle or geometric design that is controlled or enclosed within a square and arranged in sections that are structured around one central point. &lt;br&gt;
In Buddhist and Hindu cultures, a mandala embraces a lot of symbolism and represents various aspects of Buddhist teachings. It is also an instrument used for prayer, mostly in Japan, Tibet, and China.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
					&lt;footer class=&quot;c-block-quote__footer&quot;&gt;— &lt;cite&gt;What Is a Mandala?&lt;/cite&gt;&lt;/footer&gt;
				&lt;/blockquote&gt;
&lt;p&gt;This simple project was an evening experiment with the browser &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;Canvas API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Inspired by the brilliantly designed puzzle game &lt;a href=&quot;https://www.monumentvalleygame.com/mvpc&quot;&gt;Monument Valley&lt;/a&gt;, where at the end of each level, in a brief moment of artistic expression, you generate a glyph or mandala-like design by dragging your finger clumsily across the screen.&lt;/p&gt;
&lt;p&gt;This afterthought of a design element provides a surprisingly calming, gratifying and tactile experience as you can see your intricate creation taking shape in real-time.&lt;/p&gt;
&lt;p&gt;The interaction and output capture the concept of &amp;quot;simple to use, challenging to master&amp;quot; and reminded me of the rhythmic motion and almost meditative experience of turning the wheels of an Etch-a-sketch toy.&lt;/p&gt;
&lt;p&gt;I wanted to understand, reverse-engineer and try to emulate a similar effect of how effortless input gestures can be translated into precise, intricate and detailed patterns.&lt;/p&gt;
&lt;p&gt;The results were not as polished or captivating as an actual mandala or the Monument Valley version, but it&#39;s still worth trying.&lt;/p&gt;
&lt;div class=&quot;u-bleed-container:x-small u-pt:36&quot;&gt;
&lt;div class=&quot;u-border:device&quot;&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://david-way.github.io/img/Zn4dglfvps-1213.avif 1213w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://david-way.github.io/img/Zn4dglfvps-1213.webp 1213w&quot;&gt;&lt;img alt=&quot;Mandala generator preview&quot; loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://david-way.github.io/img/Zn4dglfvps-1213.png&quot; width=&quot;1213&quot; height=&quot;2048&quot;&gt;&lt;/picture&gt;
&lt;/div&gt;
&lt;figcaption&gt;
    Try out the &lt;a href=&quot;https://david-way.github.io/mandala/&quot;&gt;Mandala generator web app&lt;/a&gt;, best viewed on a touch-enabled device.
&lt;/figcaption&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>How to trick rocks into doing math</title>
		<link href="https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/"/>
		<updated>2020-07-07T00:00:00Z</updated>
		<id>https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/</id>
		<content type="html">&lt;p&gt;&lt;em&gt;Or&lt;/em&gt;, how CPUs are made.&lt;/p&gt;
&lt;h3 id=&quot;computer-aided-design-cad&quot; tabindex=&quot;-1&quot;&gt;Computer-Aided Design (CAD) &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The first step of designing a CPU is to select an instruction set and execution paradigm (referred to as the micro-architecture of the CPU). The micro-architecture is selected for a specific application (for example, general-purpose consumer use, enterprise-grade, scientific computing, or embedded system) and a suitable performance level.&lt;/p&gt;
&lt;p&gt;The implementation logic of the CPU is constructed by abstract specification of desired circuit behavior
through the selection of appropriate components e.g. Arithmetic Logic Units (ALU), registers, and cache memory and clocks.
The CAD software translates these specifications into the required circuits, logic devices, and logic gates and ultimately the transistors that make them. These elements are printed, in layers, to a silicone wafer between 0.5mm and 400 microns in thickness. The design is also analyzed and simulated to assess manufacturability and design integrity.&lt;/p&gt;
&lt;h3 id=&quot;masking-and-fabrication&quot; tabindex=&quot;-1&quot;&gt;Masking and Fabrication &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Manufacturing transistors, at the required scale and precision the achieve the modern CPU performance levels, is not possible with typical manufacturing processes. Even the most precise 3D printers are not suitable for the nano-metre scale of today’s chips. Photolithography is a multi-step process of using light to print or etch the design of many chips onto a thin silicon wafer.&lt;/p&gt;
&lt;p&gt;The printing process begins in a sterile environment by applying hydrogen peroxide to a substrate to remove any contaminants. A thin layer of silicon is deposited on the substrate and spun to uniformly cover it in another layer of photo-resistant chemical which is then baked into place. This layer is less than 2 micro-metres thick. A photo mask of the chip design is placed above the wafer and an extreme intensity UV light source is focused through it. This projects an image of the design that exposes and chemically alters the photoresist where the light reaches it. The photoresist is then treated to develop the exposed regions, preventing further light-induced alteration, and washed away from the unexposed regions. A chemical is used to remove the uppermost layer of the substrate not covered by the photoresist mask, etching the design into the wafer. The photoresist is removed, the surface is polished, and the process is repeated in as many layers as needed to complete the chip design.&lt;/p&gt;
&lt;h2 id=&quot;packaging&quot; tabindex=&quot;-1&quot;&gt;Packaging &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The delicate silicone die added to a carrier is attached to the printed circuit board (PCB) allowing it to connect, via a pin and socket, to the rest of the computer system. A heat-spreading component is mounted on top to transfer heat away from the circuits.&lt;/p&gt;
&lt;h2 id=&quot;testing-and-binning&quot; tabindex=&quot;-1&quot;&gt;Testing and Binning &lt;a class=&quot;c-header-anchor&quot; href=&quot;https://david-way.github.io/blog/how-to-trick-rocks-into-doing-math/&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CPUs are very complex and rely on an incredible level of precision on a microscopic scale. A lot of effort is put into avoiding defects but when they do occur, binning is used to mitigate waste. If the defect occurs in a redundant or non-essential component of the CPU like a core, that component is disabled and the CPU is sold as a lower-end part.&lt;/p&gt;
&lt;p&gt;The CPUs are then packaged for retail to customers or sold to OEMs for inclusion in their products.&lt;/p&gt;
</content>
	</entry>
</feed>
